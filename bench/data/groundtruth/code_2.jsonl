{"content_list": [[{"type": "paragraph", "raw_content": "<div><span><p>See <a href=\"http://spark.apache.org/docs/latest/ml-features.html\">http://spark.apache.org/docs/latest/ml-features.html</a> for\n      more information on the set of transformations available for DataFrame\n      columns in Spark.</p></span></div>", "content": [{"c": "See http://spark.apache.org/docs/latest/ml-features.html for\n      more information on the set of transformations available for DataFrame\n      columns in Spark.", "t": "text"}]}, {"type": "paragraph", "raw_content": "<div><span><p>Other feature transformers: <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_binarizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_binarizer\"&gt;ft_binarizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_binarizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_bucketizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_bucketizer\"&gt;ft_bucketizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_bucketizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_chisq_selector?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_chisq_selector\"&gt;ft_chisq_selector&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_chisq_selector</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_count_vectorizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_count_vectorizer\"&gt;ft_count_vectorizer&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_count_vectorizer</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_dct?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_dct\"&gt;ft_dct&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_dct</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_elementwise_product?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_elementwise_product\"&gt;ft_elementwise_product&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_elementwise_product</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_feature_hasher?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_feature_hasher\"&gt;ft_feature_hasher&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_feature_hasher</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_hashing_tf?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_hashing_tf\"&gt;ft_hashing_tf&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_hashing_tf</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_idf?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_idf\"&gt;ft_idf&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_idf</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_imputer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_imputer\"&gt;ft_imputer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_imputer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_index_to_string?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_index_to_string\"&gt;ft_index_to_string&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_index_to_string</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_interaction?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_interaction\"&gt;ft_interaction&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_interaction</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_lsh?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_lsh\"&gt;ft_lsh&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_lsh</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_max_abs_scaler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_max_abs_scaler\"&gt;ft_max_abs_scaler&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_max_abs_scaler</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_min_max_scaler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_min_max_scaler\"&gt;ft_min_max_scaler&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_min_max_scaler</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_ngram?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_ngram\"&gt;ft_ngram&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_ngram</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_normalizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_normalizer\"&gt;ft_normalizer&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_normalizer</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_pca?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_pca\"&gt;ft_pca&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_pca</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_polynomial_expansion?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_polynomial_expansion\"&gt;ft_polynomial_expansion&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_polynomial_expansion</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_quantile_discretizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_quantile_discretizer\"&gt;ft_quantile_discretizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_quantile_discretizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_r_formula?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_r_formula\"&gt;ft_r_formula&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_r_formula</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_regex_tokenizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_regex_tokenizer\"&gt;ft_regex_tokenizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_regex_tokenizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_sql_transformer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_sql_transformer\"&gt;ft_sql_transformer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_sql_transformer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_standard_scaler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_standard_scaler\"&gt;ft_standard_scaler&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_standard_scaler</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_stop_words_remover?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_stop_words_remover\"&gt;ft_stop_words_remover&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_stop_words_remover</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_string_indexer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_string_indexer\"&gt;ft_string_indexer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_string_indexer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_tokenizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_tokenizer\"&gt;ft_tokenizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_tokenizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_vector_assembler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_assembler\"&gt;ft_vector_assembler&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_vector_assembler</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_vector_indexer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_indexer\"&gt;ft_vector_indexer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_vector_indexer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_vector_slicer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_slicer\"&gt;ft_vector_slicer&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_vector_slicer</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_word2vec?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_word2vec\"&gt;ft_word2vec&lt;/a&gt;&lt;/code&gt;' inline=\"true\">ft_word2vec</cccode-inline></p></span></div>", "content": [{"c": "Other feature transformers:", "t": "text"}, {"c": "ft_binarizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_bucketizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_chisq_selector", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_count_vectorizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_dct", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_elementwise_product", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_feature_hasher", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_hashing_tf", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_idf", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_imputer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_index_to_string", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_interaction", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_lsh", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_max_abs_scaler", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_min_max_scaler", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_ngram", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_normalizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_pca", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_polynomial_expansion", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_quantile_discretizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_r_formula", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_regex_tokenizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_sql_transformer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_standard_scaler", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_stop_words_remover", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_string_indexer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_tokenizer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_vector_assembler", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_vector_indexer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_vector_slicer", "t": "code-inline"}, {"c": ",", "t": "text"}, {"c": "ft_word2vec", "t": "code-inline"}]}]], "main_html": "<div><span><p>See <a href=\"http://spark.apache.org/docs/latest/ml-features.html\">http://spark.apache.org/docs/latest/ml-features.html</a> for\n      more information on the set of transformations available for DataFrame\n      columns in Spark.</p></span></div><div><span><p>Other feature transformers: <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_binarizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_binarizer\"&gt;ft_binarizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_binarizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_bucketizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_bucketizer\"&gt;ft_bucketizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_bucketizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_chisq_selector?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_chisq_selector\"&gt;ft_chisq_selector&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_chisq_selector</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_count_vectorizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_count_vectorizer\"&gt;ft_count_vectorizer&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_count_vectorizer</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_dct?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_dct\"&gt;ft_dct&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_dct</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_elementwise_product?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_elementwise_product\"&gt;ft_elementwise_product&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_elementwise_product</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_feature_hasher?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_feature_hasher\"&gt;ft_feature_hasher&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_feature_hasher</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_hashing_tf?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_hashing_tf\"&gt;ft_hashing_tf&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_hashing_tf</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_idf?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_idf\"&gt;ft_idf&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_idf</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_imputer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_imputer\"&gt;ft_imputer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_imputer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_index_to_string?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_index_to_string\"&gt;ft_index_to_string&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_index_to_string</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_interaction?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_interaction\"&gt;ft_interaction&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_interaction</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_lsh?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_lsh\"&gt;ft_lsh&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_lsh</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_max_abs_scaler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_max_abs_scaler\"&gt;ft_max_abs_scaler&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_max_abs_scaler</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_min_max_scaler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_min_max_scaler\"&gt;ft_min_max_scaler&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_min_max_scaler</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_ngram?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_ngram\"&gt;ft_ngram&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_ngram</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_normalizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_normalizer\"&gt;ft_normalizer&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_normalizer</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_pca?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_pca\"&gt;ft_pca&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_pca</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_polynomial_expansion?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_polynomial_expansion\"&gt;ft_polynomial_expansion&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_polynomial_expansion</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_quantile_discretizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_quantile_discretizer\"&gt;ft_quantile_discretizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_quantile_discretizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_r_formula?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_r_formula\"&gt;ft_r_formula&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_r_formula</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_regex_tokenizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_regex_tokenizer\"&gt;ft_regex_tokenizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_regex_tokenizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_sql_transformer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_sql_transformer\"&gt;ft_sql_transformer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_sql_transformer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_standard_scaler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_standard_scaler\"&gt;ft_standard_scaler&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_standard_scaler</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_stop_words_remover?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_stop_words_remover\"&gt;ft_stop_words_remover&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_stop_words_remover</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_string_indexer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_string_indexer\"&gt;ft_string_indexer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_string_indexer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_tokenizer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_tokenizer\"&gt;ft_tokenizer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_tokenizer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_vector_assembler?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_assembler\"&gt;ft_vector_assembler&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_vector_assembler</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_vector_indexer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_indexer\"&gt;ft_vector_indexer&lt;/a&gt;&lt;/code&gt;,\n      ' inline=\"true\">ft_vector_indexer</cccode-inline>,\n      <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_vector_slicer?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_slicer\"&gt;ft_vector_slicer&lt;/a&gt;&lt;/code&gt;, ' inline=\"true\">ft_vector_slicer</cccode-inline>, <cccode-inline by=\"tag_code\" html='&lt;code&gt;&lt;a rd-options=\"\" href=\"/link/ft_word2vec?package=sparklyr&amp;amp;version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_word2vec\"&gt;ft_word2vec&lt;/a&gt;&lt;/code&gt;' inline=\"true\">ft_word2vec</cccode-inline></p></span></div>", "statics": {"paragraph": 2, "paragraph.text": 32, "paragraph.code-inline": 31}, "url": "https://www.rdocumentation.org/packages/sparklyr/versions/0.8.0/topics/ft_one_hot_encoder", "content": "See http://spark.apache.org/docs/latest/ml-features.html for\n      more information on the set of transformations available for DataFrame\n      columns in Spark.\n\nOther feature transformers: `ft_binarizer` , `ft_bucketizer` , `ft_chisq_selector` , `ft_count_vectorizer` , `ft_dct` , `ft_elementwise_product` , `ft_feature_hasher` , `ft_hashing_tf` , `ft_idf` , `ft_imputer` , `ft_index_to_string` , `ft_interaction` , `ft_lsh` , `ft_max_abs_scaler` , `ft_min_max_scaler` , `ft_ngram` , `ft_normalizer` , `ft_pca` , `ft_polynomial_expansion` , `ft_quantile_discretizer` , `ft_r_formula` , `ft_regex_tokenizer` , `ft_sql_transformer` , `ft_standard_scaler` , `ft_stop_words_remover` , `ft_string_indexer` , `ft_tokenizer` , `ft_vector_assembler` , `ft_vector_indexer` , `ft_vector_slicer` , `ft_word2vec`\n", "html": "\n<!DOCTYPE html><html lang=\"en\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width\"/><title>ft_one_hot_encoder function - RDocumentation</title><meta content=\"&lt;p&gt;One-hot encoding maps a column of label indices to a column of binary\n    vectors, with at most a single one-value. This encoding allows algorithms\n    which expect continuous features, such as Logistic Regression, to use\n    categorical features. Typically, used with  &lt;code&gt;ft_string_indexer()&lt;/code&gt; to\n    index a column first.&lt;/p&gt;\" name=\"description\"/><link href=\"https://www.rdocumentation.org/packages/sparklyr/versions/1.8.5/topics/ft_one_hot_encoder\" rel=\"canonical\"/><meta name=\"next-head-count\" content=\"5\"/><link href=\"/favicon.ico\" rel=\"icon\"/><meta content=\"l7VjaJvG_OgqxbCyZDDtk_ykMcPXyqwTSoWnf94hGQk\" name=\"google-site-verification\"/><script>\n                  window.dataLayer = window.dataLayer || [];\n                </script><script async=\"\" src=\"https://promo.datacamp.com/banner.js?variant=rdocs\"></script><link rel=\"preload\" href=\"/_next/static/css/1617ea21e5507339.css\" as=\"style\"/><link rel=\"stylesheet\" href=\"/_next/static/css/1617ea21e5507339.css\" data-n-g=\"\"/><noscript data-n-css=\"\"></noscript><script defer=\"\" nomodule=\"\" src=\"/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\"></script><script src=\"/_next/static/chunks/webpack-36d12a75f0098f30.js\" defer=\"\"></script><script src=\"/_next/static/chunks/framework-e952fed463eb8e34.js\" defer=\"\"></script><script src=\"/_next/static/chunks/main-e831e9cc1b958ed8.js\" defer=\"\"></script><script src=\"/_next/static/chunks/pages/_app-1830df8b3382e531.js\" defer=\"\"></script><script src=\"/_next/static/chunks/1bfc9850-28a5771e37517e28.js\" defer=\"\"></script><script src=\"/_next/static/chunks/597-a958342c719b2bea.js\" defer=\"\"></script><script src=\"/_next/static/chunks/587-d188df2bba014132.js\" defer=\"\"></script><script src=\"/_next/static/chunks/57-e009693f3a53143b.js\" defer=\"\"></script><script src=\"/_next/static/chunks/pages/packages/%5Bpackage%5D/versions/%5Bversion%5D/topics/%5Btopic%5D-9fe635c339dd968c.js\" defer=\"\"></script><script src=\"/_next/static/md9MtDKNhtTyIK5AaW0ev/_buildManifest.js\" defer=\"\"></script><script src=\"/_next/static/md9MtDKNhtTyIK5AaW0ev/_ssgManifest.js\" defer=\"\"></script></head><body><div id=\"__next\"><style data-emotion=\"css 1p2l4tz\">.css-1p2l4tz{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:16px;margin:0 auto;max-width:1600px;padding:24px 16px;}.css-1p2l4tz[data-theme=\"dark\"]{-webkit-print-color-scheme:dark;color-scheme:dark;--wf-bg--active:rgba(255, 255, 255, 0.1);--wf-bg--contrast:#213147;--wf-bg--contrast-inverse:#FFFFFF;--wf-bg--focus:rgba(255, 255, 255, 0.06);--wf-bg--hover:rgba(255, 255, 255, 0.06);--wf-bg--hover-strong:rgba(255, 255, 255, 0.2);--wf-bg--hover-strong-inverse:rgba(48, 57, 105, 0.1);--wf-bg--main:#05192D;--wf-bg--secondary:#13253A;--wf-bg--tertiary:#000820;--wf-bg--transparent:rgba(255, 255, 255, 0.2);--wf-bg--transparent-inverse:rgba(48, 57, 105, 0.1);--wf-blue--darker:#257DFE;--wf-blue--lighter:#72E5FE;--wf-blue--main:#5EB1FF;--wf-blue--text:#5EB1FF;--wf-blue--text-on-color:#05192D;--wf-blue--transparent:rgba(37, 125, 254, 0.15);--wf-border-color--focus-outline:#257DFE;--wf-border-color--interactive:rgba(255, 255, 255, 0.6);--wf-border-color--main:rgba(255, 255, 255, 0.15);--wf-border-color--strong:rgba(255, 255, 255, 0.3);--wf-box-shadow--medium:0px 3px 10px -1px rgba(0, 8, 32, 0.8);--wf-box-shadow--thick:0px 5px 15px -1px rgba(0, 8, 32, 0.8);--wf-box-shadow--thin:0px 0px 3px 0px rgba(0, 8, 32, 0.8);--wf-box-shadow--xthick:0px 8px 20px -4px rgba(0, 8, 32, 0.8);--wf-brand--darker:#00C74E;--wf-brand--lighter:#65FF8F;--wf-brand--main:#03EF62;--wf-brand--text:#FFFFFF;--wf-brand--text-on-color:#05192D;--wf-brand--text-subtle:rgba(255, 255, 255, 0.6);--wf-error--darker:#BE2705;--wf-error--lighter:#FF6752;--wf-error--main:#DD3400;--wf-error--text:#FF6752;--wf-error--text-on-color:#FFFFFF;--wf-error--transparent:rgba(255, 73, 48, 0.2);--wf-green--darker:#00C74E;--wf-green--lighter:#65FF8F;--wf-green--main:#03EF62;--wf-green--text:#03EF62;--wf-green--text-on-color:#05192D;--wf-green--transparent:rgba(101, 255, 143, 0.2);--wf-grey--darker:#E1E1E8;--wf-grey--lighter:#EFEFF5;--wf-grey--main:#E8E8EE;--wf-grey--subtler:#F7F7FC;--wf-grey--text:#F7F7FC;--wf-grey--text-on-color:#05192D;--wf-grey--transparent:rgba(255, 255, 255, 0.1);--wf-info--darker:#257DFE;--wf-info--lighter:#72E5FE;--wf-info--main:#5EB1FF;--wf-info--text:#5EB1FF;--wf-info--text-on-color:#05192D;--wf-info--transparent:rgba(94, 177, 225, 0.2);--wf-navy--darker:#000820;--wf-navy--lighter:#13253A;--wf-navy--main:#05192D;--wf-navy--subtler:#213147;--wf-navy--text:#213147;--wf-navy--text-on-color:#FFFFFF;--wf-navy--transparent:rgba(5, 25, 45, 0.1);--wf-orange--darker:#D87300;--wf-orange--lighter:#FFBC4B;--wf-orange--main:#FF931E;--wf-orange--text:#FF931E;--wf-orange--text-on-color:#05192D;--wf-orange--transparent:rgba(255, 147, 30, 0.2);--wf-pink--darker:#DC4D8B;--wf-pink--lighter:#FF95CF;--wf-pink--main:#FF80B4;--wf-pink--text:#FF80B4;--wf-pink--text-on-color:#05192D;--wf-pink--transparent:rgba(220, 77, 139, 0.2);--wf-purple--darker:#5646A5;--wf-purple--lighter:#B08EFF;--wf-purple--main:#7933FF;--wf-purple--text:#B08EFF;--wf-purple--text-on-color:#FFFFFF;--wf-purple--transparent:rgba(121, 51, 255, 0.18);--wf-red--darker:#BE2705;--wf-red--lighter:#FF6752;--wf-red--main:#DD3400;--wf-red--text:#FF6752;--wf-red--text-on-color:#FFFFFF;--wf-red--transparent:rgba(190, 39, 5, 0.16);--wf-success--darker:#00C74E;--wf-success--lighter:#65FF8F;--wf-success--main:#03EF62;--wf-success--text:#03EF62;--wf-success--text-on-color:#05192D;--wf-success--transparent:rgba(3, 239, 98, 0.2);--wf-text--inverse:#05192D;--wf-text--inverse-subtle:#5D6A77;--wf-text--link:#5EB1FF;--wf-text--main:#EFEFF5;--wf-text--secondary:#E1E1E8;--wf-text--subtle:#9BA3AB;--wf-transparent-grey--darker:rgba(255, 255, 255, 0.3);--wf-transparent-grey--lighter:rgba(255, 255, 255, 0.15);--wf-transparent-grey--main:rgba(255, 255, 255, 0.2);--wf-transparent-grey--subtler:rgba(255, 255, 255, 0.1);--wf-transparent-grey--text:#E1E1E8;--wf-transparent-grey--text-on-color:#FFFFFF;--wf-upgrade--darker:#5646A5;--wf-upgrade--lighter:#B08EFF;--wf-upgrade--main:#7933FF;--wf-upgrade--text:#B08EFF;--wf-upgrade--text-on-color:#FFFFFF;--wf-upgrade--transparent:rgba(121, 51, 255, 0.2);--wf-warning--darker:#D87300;--wf-warning--lighter:#FFBC4B;--wf-warning--main:#FF931E;--wf-warning--text:#FF931E;--wf-warning--text-on-color:#05192D;--wf-warning--transparent:rgba(255, 188, 75, 0.2);--wf-white--main:#FFFFFF;--wf-white--text:#FFFFFF;--wf-white--text-on-color:#05192D;--wf-white--transparent:rgba(255, 255, 255, 0.2);--wf-yellow--darker:#CFA600;--wf-yellow--lighter:#FFEC3C;--wf-yellow--main:#FCCE0D;--wf-yellow--text:#FCCE0D;--wf-yellow--text-on-color:#05192D;--wf-yellow--transparent:rgba(252, 206, 13, 0.18);}.css-1p2l4tz[data-theme=\"light\"]{-webkit-print-color-scheme:light;color-scheme:light;--wf-bg--active:rgba(48, 57, 105, 0.1);--wf-bg--contrast:#FFFFFF;--wf-bg--contrast-inverse:#05192D;--wf-bg--focus:rgba(48, 57, 105, 0.06);--wf-bg--hover:rgba(48, 57, 105, 0.06);--wf-bg--hover-strong:rgba(48, 57, 105, 0.1);--wf-bg--hover-strong-inverse:rgba(255, 255, 255, 0.2);--wf-bg--main:#F7F7FC;--wf-bg--secondary:#EFEFF5;--wf-bg--tertiary:#E8E8EE;--wf-bg--transparent:rgba(48, 57, 105, 0.1);--wf-bg--transparent-inverse:rgba(255, 255, 255, 0.2);--wf-blue--darker:#257DFE;--wf-blue--lighter:#72E5FE;--wf-blue--main:#5EB1FF;--wf-blue--text:#0065D1;--wf-blue--text-on-color:#05192D;--wf-blue--transparent:rgba(37, 125, 254, 0.12);--wf-border-color--focus-outline:#257DFE;--wf-border-color--interactive:rgba(48, 57, 105, 0.6);--wf-border-color--main:rgba(48, 57, 105, 0.15);--wf-border-color--strong:rgba(48, 57, 105, 0.3);--wf-box-shadow--medium:0px 1px 4px -1px rgba(48, 57, 105, 0.3);--wf-box-shadow--thick:0px 3px 5px -1px rgba(48, 57, 105, 0.3);--wf-box-shadow--thin:0px 0px 2px 0px rgba(48, 57, 105, 0.3);--wf-box-shadow--xthick:0px 8px 12px -4px rgba(48, 57, 105, 0.3);--wf-brand--darker:#00C74E;--wf-brand--lighter:#65FF8F;--wf-brand--main:#03EF62;--wf-brand--text:#05192D;--wf-brand--text-on-color:#05192D;--wf-brand--text-subtle:rgba(48, 57, 105, 0.6);--wf-error--darker:#BE2705;--wf-error--lighter:#FF6752;--wf-error--main:#DD3400;--wf-error--text:#C01100;--wf-error--text-on-color:#FFFFFF;--wf-error--transparent:rgba(255, 73, 48, 0.1);--wf-green--darker:#00C74E;--wf-green--lighter:#65FF8F;--wf-green--main:#03EF62;--wf-green--text:#008031;--wf-green--text-on-color:#05192D;--wf-green--transparent:rgba(101, 255, 143, 0.2);--wf-grey--darker:#E1E1E8;--wf-grey--lighter:#EFEFF5;--wf-grey--main:#E8E8EE;--wf-grey--subtler:#F7F7FC;--wf-grey--text:#848492;--wf-grey--text-on-color:#05192D;--wf-grey--transparent:rgba(48, 57, 105, 0.1);--wf-info--darker:#257DFE;--wf-info--lighter:#72E5FE;--wf-info--main:#5EB1FF;--wf-info--text:#0065D1;--wf-info--text-on-color:#05192D;--wf-info--transparent:rgba(94, 177, 225, 0.2);--wf-navy--darker:#000820;--wf-navy--lighter:#13253A;--wf-navy--main:#05192D;--wf-navy--subtler:#213147;--wf-navy--text:#05192D;--wf-navy--text-on-color:#FFFFFF;--wf-navy--transparent:rgba(5, 25, 45, 0.1);--wf-orange--darker:#D87300;--wf-orange--lighter:#FFBC4B;--wf-orange--main:#FF931E;--wf-orange--text:#A85200;--wf-orange--text-on-color:#05192D;--wf-orange--transparent:rgba(255, 188, 75, 0.2);--wf-pink--darker:#DC4D8B;--wf-pink--lighter:#FF95CF;--wf-pink--main:#FF80B4;--wf-pink--text:#BF3072;--wf-pink--text-on-color:#05192D;--wf-pink--transparent:rgba(255, 149, 207, 0.18);--wf-purple--darker:#5646A5;--wf-purple--lighter:#B08EFF;--wf-purple--main:#7933FF;--wf-purple--text:#5646A5;--wf-purple--text-on-color:#FFFFFF;--wf-purple--transparent:rgba(121, 51, 255, 0.18);--wf-red--darker:#BE2705;--wf-red--lighter:#FF6752;--wf-red--main:#DD3400;--wf-red--text:#C01100;--wf-red--text-on-color:#FFFFFF;--wf-red--transparent:rgba(255, 73, 48, 0.18);--wf-success--darker:#00C74E;--wf-success--lighter:#65FF8F;--wf-success--main:#03EF62;--wf-success--text:#008031;--wf-success--text-on-color:#05192D;--wf-success--transparent:rgba(3, 239, 98, 0.1);--wf-text--inverse:#FFFFFF;--wf-text--inverse-subtle:#9BA3AB;--wf-text--link:#0065D1;--wf-text--main:#05192D;--wf-text--secondary:#213147;--wf-text--subtle:#5D6A77;--wf-transparent-grey--darker:rgba(48, 57, 105, 0.3);--wf-transparent-grey--lighter:rgba(48, 57, 105, 0.15);--wf-transparent-grey--main:rgba(48, 57, 105, 0.2);--wf-transparent-grey--subtler:rgba(48, 57, 105, 0.1);--wf-transparent-grey--text:#595D78;--wf-transparent-grey--text-on-color:#05192D;--wf-upgrade--darker:#5646A5;--wf-upgrade--lighter:#B08EFF;--wf-upgrade--main:#7933FF;--wf-upgrade--text:#5646A5;--wf-upgrade--text-on-color:#FFFFFF;--wf-upgrade--transparent:rgba(121, 51, 255, 0.1);--wf-warning--darker:#D87300;--wf-warning--lighter:#FFBC4B;--wf-warning--main:#FF931E;--wf-warning--text:#A85200;--wf-warning--text-on-color:#05192D;--wf-warning--transparent:rgba(255, 188, 75, 0.2);--wf-white--main:#FFFFFF;--wf-white--text:#FFFFFF;--wf-white--text-on-color:#05192D;--wf-white--transparent:rgba(255, 255, 255, 0.2);--wf-yellow--darker:#CFA600;--wf-yellow--lighter:#FFEC3C;--wf-yellow--main:#FCCE0D;--wf-yellow--text:#926904;--wf-yellow--text-on-color:#05192D;--wf-yellow--transparent:rgba(255, 236, 60, 0.2);}@media screen and (min-width: 820px){.css-1p2l4tz{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-direction:unset;-ms-flex-direction:unset;flex-direction:unset;gap:0;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;padding:16px 70px;}}</style><header class=\"css-1p2l4tz\"><nav><style data-emotion=\"css 1pin2rm\">.css-1pin2rm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1pin2rm:hover{cursor:pointer;}</style><div class=\"css-1pin2rm\"><a href=\"/\"><style data-emotion=\"css 73ljzu\">.css-73ljzu{color:var(--wf-text--main, #05192D);margin:0;}</style><style data-emotion=\"css qlpanj\">.css-qlpanj{font-weight:800;line-height:1.25;margin-bottom:8px;font-size:18px;color:var(--wf-text--main, #05192D);margin:0;}</style><style data-emotion=\"css 1udsrj\">.css-1udsrj{color:var(--wf-text--main, #05192D);font-family:Studio-Feixen-Sans,Arial,sans-serif;font-weight:400;line-height:1.5;margin:0;padding:0;font-size:14px;font-weight:800;line-height:1.25;margin-bottom:8px;font-size:18px;color:var(--wf-text--main, #05192D);margin:0;}</style><h2 class=\"css-1udsrj\">Rdocumentation</h2></a><div><style data-emotion=\"css sncmsb\">.css-sncmsb{border:1px inset;color:var(--wf-border-color--strong, rgba(48, 57, 105, 0.3));display:block;height:30px;margin:0 8px;width:1px;}</style><hr class=\"css-sncmsb\"/></div><style data-emotion=\"css j7qwjs\">.css-j7qwjs{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}</style><a href=\"https://www.datacamp.com\" class=\"css-j7qwjs\"><style data-emotion=\"css 17bjunk\">.css-17bjunk{margin-bottom:8px;color:var(--wf-text--subtle, #5D6A77);}</style><style data-emotion=\"css 88f09c\">.css-88f09c{color:var(--wf-text--main, #05192D);font-family:Studio-Feixen-Sans,Arial,sans-serif;font-weight:400;line-height:1.5;margin:0;padding:0;font-size:12px;margin-bottom:8px;color:var(--wf-text--subtle, #5D6A77);}</style><p style=\"color:var(--wf-text--secondary, #213147);margin-bottom:0\" class=\"css-88f09c\">powered by</p><style data-emotion=\"css 1ywujyj\">.css-1ywujyj{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:18px;width:86px;}</style><style data-emotion=\"css 1s9fzvj\">.css-1s9fzvj{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:18px;width:86px;}</style><svg viewBox=\"0 0 173 36\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" class=\"css-1s9fzvj\"><path clip-rule=\"evenodd\" d=\"M42.56 27.099a5.694 5.694 0 1 1 0-11.387 5.694 5.694 0 0 1 0 11.387zm5.704-20.622v8.853a8.335 8.335 0 1 0 0 12.149v1.835h2.632V6.477h-2.632zm73.28 20.622a5.694 5.694 0 1 1 0-11.387 5.694 5.694 0 0 1 0 11.387zm8.333-5.694v-8.246h-2.631v2.171a8.334 8.334 0 0 0-11.66.243 8.333 8.333 0 0 0 0 11.663 8.334 8.334 0 0 0 11.66.243v1.835h2.632v-7.909h-.001zm20.987-7.634a1.294 1.294 0 0 1 1.109-.622h.507c1.075 0 1.947.872 1.947 1.947v14.218h-2.686V17.269c-1.239 2-5.674 9.25-7.003 11.424a1.299 1.299 0 0 1-1.108.621h-.548a1.298 1.298 0 0 1-1.298-1.298V17.238a1886.566 1886.566 0 0 0-7.31 11.954l-.074.122h-2.574v-16.16h2.684v.034l-.062 11.147 6.438-10.56a1.3 1.3 0 0 1 1.109-.622h.511c1.073 0 1.944.869 1.947 1.942 0 2.971.014 8.382.014 9.17l6.397-10.494zm-37.92 12.541a8.33 8.33 0 1 1-9.05-12.906 8.332 8.332 0 0 1 9.26 3.403l-2.524 1.312a5.533 5.533 0 1 0-.379 6.879l2.693 1.312zm51.542.8a5.694 5.694 0 0 1-5.68-5.352v-.682a5.695 5.695 0 1 1 5.684 6.035l-.004-.001zm.004-14.026a8.3 8.3 0 0 0-5.684 2.24v-2.168h-2.632V35.91h2.632v-8.4a8.331 8.331 0 0 0 10.017 1.025 8.331 8.331 0 0 0-4.333-15.45v.001zM75.277 15.68v9.938c0 .589.478 1.067 1.067 1.067h3.064v2.629h-3.062a3.7 3.7 0 0 1-3.696-3.696l-.01-9.938h-2.838v-2.56h2.838V8.702h2.635v4.427h4.672v2.55h-4.67v.001zm12.757 11.418a5.694 5.694 0 1 1 0-11.389 5.694 5.694 0 0 1 0 11.389zm5.702-13.941v2.173a8.335 8.335 0 1 0 0 12.149v1.835h2.632v-16.16l-2.632.003zM60.285 27.099a5.694 5.694 0 1 1 0-11.387 5.694 5.694 0 0 1 0 11.387zm5.702-13.941v2.171a8.335 8.335 0 1 0 0 12.149v1.835h2.63v-16.16l-2.63.005z\" fill=\"var(--wf-brand--text, #05192D)\" fill-rule=\"evenodd\"></path><path clip-rule=\"evenodd\" d=\"M11.699 8.514v8.333L2.858 21.89V3.44l8.841 5.074zm2.861 17.507v-7.51l11.84-6.757-2.88-1.65-8.96 5.112V7.68a1.442 1.442 0 0 0-.718-1.242L3.056.256C3.027.238 2.998.224 2.97.21A2.064 2.064 0 0 0 0 2.07v21.184a2.067 2.067 0 0 0 2.971 1.865l.082-.042 8.64-4.933v6.72c.002.513.277.987.722 1.243L23.502 34.4l2.88-1.651-11.822-6.728z\" fill=\"var(--wf-brand--main, #03EF62)\" fill-rule=\"evenodd\"></path></svg></a></div></nav><style data-emotion=\"css bnvfy4\">.css-bnvfy4{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column-reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;gap:16px;}@media screen and (min-width: 820px){.css-bnvfy4{-webkit-flex-direction:unset;-ms-flex-direction:unset;flex-direction:unset;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}}</style><div class=\"css-bnvfy4\"><form style=\"width:100%\"><style data-emotion=\"css ng9ybj\">.css-ng9ybj{position:relative;width:100%;height:36px;opacity:1;}.css-ng9ybj::after{border-radius:6px;content:\"\";display:block;inset:0;margin:-2px;pointer-events:none;position:absolute;-webkit-transition:box-shadow 125ms ease-out;transition:box-shadow 125ms ease-out;z-index:1;}</style><div class=\"css-ng9ybj\"><style data-emotion=\"css 1vuq09w\">.css-1vuq09w{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--wf-text--main, #05192D);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100%;pointer-events:none;position:absolute;top:0;z-index:1;left:12px;}</style><div class=\"css-1vuq09w\"><svg aria-hidden=\"true\" height=\"16\" width=\"16\" viewBox=\"0 0 18 18\" data-testid=\"search-icon\"><path fill=\"currentColor\" d=\"m13.26 12.303 4.408 3.953a1 1 0 0 1-1.336 1.488L11.78 13.66a7.5 7.5 0 1 1 1.482-1.358ZM7.5 13a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z\"></path></svg></div><style data-emotion=\"css 19l8hon\">.css-19l8hon{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;background-color:var(--wf-bg--contrast, #FFFFFF);border:1px solid var(--wf-border-color--strong, rgba(48, 57, 105, 0.3));border-radius:4px;color:var(--wf-text--main, #05192D);cursor:text;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;font-family:Studio-Feixen-Sans,Arial,sans-serif;font-weight:400;height:100%;line-height:1.5;outline:0;width:100%;font-size:14px;padding-left:36px;padding-right:12px;}.css-19l8hon::-ms-clear,.css-19l8hon::-ms-reveal{display:none;height:0;width:0;}.css-19l8hon::-webkit-search-decoration,.css-19l8hon::-webkit-search-cancel-button,.css-19l8hon::-webkit-search-results-button,.css-19l8hon::-webkit-search-results-decoration{display:none;}.css-19l8hon::-webkit-input-placeholder{color:var(--wf-text--subtle, #5D6A77);opacity:1;}.css-19l8hon::-moz-placeholder{color:var(--wf-text--subtle, #5D6A77);opacity:1;}.css-19l8hon:-ms-input-placeholder{color:var(--wf-text--subtle, #5D6A77);opacity:1;}.css-19l8hon::placeholder{color:var(--wf-text--subtle, #5D6A77);opacity:1;}.css-19l8hon:-webkit-autofill{box-shadow:0 0 0 36px white inset;}.css-19l8hon:disabled{cursor:default;}</style><input id=\"searchBarNav\" name=\"searchBarNav\" placeholder=\"Search all packages and functions\" style=\"flex-grow:1;min-width:343px\" aria-invalid=\"false\" type=\"search\" class=\"css-19l8hon\" value=\"\"/></div></form><style data-emotion=\"css ns1lu0\">.css-ns1lu0{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1 1 100%;-ms-flex:1 1 100%;flex:1 1 100%;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;gap:8px;width:100%;}</style><div class=\"css-ns1lu0\"><style data-emotion=\"css 1uda3wf\">.css-1uda3wf{height:36px;padding:12px;}</style><style data-emotion=\"css x1oebj\">.css-x1oebj{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-color:transparent;border-radius:4px;border-style:solid;border-width:2px;cursor:pointer;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;font-family:Studio-Feixen-Sans,Arial,sans-serif;font-weight:800;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;line-height:1;margin:0;outline:0;padding:0;position:relative;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:background-color 125ms ease-out;transition:background-color 125ms ease-out;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;background-color:transparent;color:var(--wf-text--main, #05192D);font-size:var(--wf-button--medium, 14px);height:36px;min-width:36px;width:auto;padding-left:16px;padding-right:16px;border-color:var(--wf-border-color--interactive, rgba(48, 57, 105, 0.6));height:36px;padding:12px;}.css-x1oebj::before{border-radius:2px;content:\"\";display:block;height:100%;inset:0;position:absolute;width:100%;z-index:0;}.css-x1oebj::before{border-radius:2px;margin:0;}.css-x1oebj:active{background-color:transparent;}.css-x1oebj:disabled{cursor:default;opacity:0.4;pointer-events:none;}.css-x1oebj:hover::before{background-color:var(--wf-bg--hover, rgba(48, 57, 105, 0.06));}.css-x1oebj >*{z-index:1;}</style><button class=\"p-1 css-x1oebj\" aria-label=\"toggle dark mode\" type=\"button\"><style data-emotion=\"css 61bni1\">.css-61bni1{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100%;gap:8px;}</style><span class=\"css-61bni1\"><svg aria-hidden=\"true\" height=\"16\" width=\"16\" viewBox=\"0 0 18 18\"><path fill=\"currentColor\" d=\"M9 14A5 5 0 1 1 9 4a5 5 0 0 1 0 10ZM3 9a1 1 0 0 1-1 1H1a1 1 0 1 1 0-2h1a1 1 0 0 1 1 1Zm15 0a1 1 0 0 1-1 1h-1a1 1 0 0 1 0-2h1a1 1 0 0 1 1 1ZM9 0a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V1a1 1 0 0 1 1-1Zm0 15a1 1 0 0 1 1 1v1a1 1 0 0 1-2 0v-1a1 1 0 0 1 1-1Zm6.364-12.364a1 1 0 0 1 0 1.414l-.707.707a1 1 0 1 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM4.757 13.243a1 1 0 0 1 0 1.414l-.707.707a1 1 0 0 1-1.414-1.414l.707-.707a1 1 0 0 1 1.414 0ZM2.636 2.636a1 1 0 0 1 1.414 0l.707.707a1 1 0 0 1-1.414 1.414l-.707-.707a1 1 0 0 1 0-1.414Zm10.607 10.607a1 1 0 0 1 1.414 0l.707.707a1 1 0 1 1-1.414 1.414l-.707-.707a1 1 0 0 1 0-1.414Z\"></path></svg></span></button><a href=\"https://github.com/datacamp/rdocumentation-2.0\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"css-x1oebj\" aria-label=\"github repository\"><span class=\"css-61bni1\"><svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 496 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path></svg></span></a><style data-emotion=\"css k6w0d8\">.css-k6w0d8{height:36px;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;padding:8px 16px;}</style><style data-emotion=\"css pzoch\">.css-pzoch{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-color:transparent;border-radius:4px;border-style:solid;border-width:2px;cursor:pointer;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;font-family:Studio-Feixen-Sans,Arial,sans-serif;font-weight:800;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;line-height:1;margin:0;outline:0;padding:0;position:relative;-webkit-text-decoration:none;text-decoration:none;-webkit-transition:background-color 125ms ease-out;transition:background-color 125ms ease-out;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;background-color:var(--wf-brand--main, #03EF62);color:var(--wf-brand--text-on-color, #05192D);font-size:var(--wf-button--medium, 14px);height:36px;min-width:36px;width:auto;padding-left:16px;padding-right:16px;height:36px;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;padding:8px 16px;}.css-pzoch::before{border-radius:2px;content:\"\";display:block;height:100%;inset:0;position:absolute;width:100%;z-index:0;}.css-pzoch:active{background-color:var(--wf-brand--main, #03EF62);}.css-pzoch:disabled{cursor:default;opacity:0.4;pointer-events:none;}.css-pzoch:hover{border-color:var(--wf-bg--hover-strong, rgba(48, 57, 105, 0.1));}.css-pzoch:hover::before{background-color:var(--wf-bg--hover-strong, rgba(48, 57, 105, 0.1));}.css-pzoch >*{z-index:1;}</style><a href=\"https://www.datacamp.com/category/r\" class=\"css-pzoch\"><span class=\"css-61bni1\"><svg aria-hidden=\"true\" height=\"16\" width=\"16\" viewBox=\"0 0 18 18\" style=\"flex-shrink:0\"><path fill=\"currentColor\" d=\"M8.122 4.454v4.36l-4.627 2.64V1.799l4.627 2.655Zm1.497 9.161v-3.93l6.195-3.535-1.507-.863L9.62 7.96V4.018a.754.754 0 0 0-.376-.65L3.599.133a1.08 1.08 0 0 0-1.6.95L2 12.168a1.082 1.082 0 0 0 1.555.976l.042-.022 4.522-2.581v3.516c0 .27.144.517.377.651L14.298 18l1.507-.864-6.186-3.52Z\"></path></svg>Learn R Programming</span></a></div></div></header><style data-emotion=\"css 1x0bpc3\">.css-1x0bpc3{border-color:var(--wf-border-color--strong, rgba(48, 57, 105, 0.3));}.css-1x0bpc3[data-theme=\"dark\"]{-webkit-print-color-scheme:dark;color-scheme:dark;--wf-bg--active:rgba(255, 255, 255, 0.1);--wf-bg--contrast:#213147;--wf-bg--contrast-inverse:#FFFFFF;--wf-bg--focus:rgba(255, 255, 255, 0.06);--wf-bg--hover:rgba(255, 255, 255, 0.06);--wf-bg--hover-strong:rgba(255, 255, 255, 0.2);--wf-bg--hover-strong-inverse:rgba(48, 57, 105, 0.1);--wf-bg--main:#05192D;--wf-bg--secondary:#13253A;--wf-bg--tertiary:#000820;--wf-bg--transparent:rgba(255, 255, 255, 0.2);--wf-bg--transparent-inverse:rgba(48, 57, 105, 0.1);--wf-blue--darker:#257DFE;--wf-blue--lighter:#72E5FE;--wf-blue--main:#5EB1FF;--wf-blue--text:#5EB1FF;--wf-blue--text-on-color:#05192D;--wf-blue--transparent:rgba(37, 125, 254, 0.15);--wf-border-color--focus-outline:#257DFE;--wf-border-color--interactive:rgba(255, 255, 255, 0.6);--wf-border-color--main:rgba(255, 255, 255, 0.15);--wf-border-color--strong:rgba(255, 255, 255, 0.3);--wf-box-shadow--medium:0px 3px 10px -1px rgba(0, 8, 32, 0.8);--wf-box-shadow--thick:0px 5px 15px -1px rgba(0, 8, 32, 0.8);--wf-box-shadow--thin:0px 0px 3px 0px rgba(0, 8, 32, 0.8);--wf-box-shadow--xthick:0px 8px 20px -4px rgba(0, 8, 32, 0.8);--wf-brand--darker:#00C74E;--wf-brand--lighter:#65FF8F;--wf-brand--main:#03EF62;--wf-brand--text:#FFFFFF;--wf-brand--text-on-color:#05192D;--wf-brand--text-subtle:rgba(255, 255, 255, 0.6);--wf-error--darker:#BE2705;--wf-error--lighter:#FF6752;--wf-error--main:#DD3400;--wf-error--text:#FF6752;--wf-error--text-on-color:#FFFFFF;--wf-error--transparent:rgba(255, 73, 48, 0.2);--wf-green--darker:#00C74E;--wf-green--lighter:#65FF8F;--wf-green--main:#03EF62;--wf-green--text:#03EF62;--wf-green--text-on-color:#05192D;--wf-green--transparent:rgba(101, 255, 143, 0.2);--wf-grey--darker:#E1E1E8;--wf-grey--lighter:#EFEFF5;--wf-grey--main:#E8E8EE;--wf-grey--subtler:#F7F7FC;--wf-grey--text:#F7F7FC;--wf-grey--text-on-color:#05192D;--wf-grey--transparent:rgba(255, 255, 255, 0.1);--wf-info--darker:#257DFE;--wf-info--lighter:#72E5FE;--wf-info--main:#5EB1FF;--wf-info--text:#5EB1FF;--wf-info--text-on-color:#05192D;--wf-info--transparent:rgba(94, 177, 225, 0.2);--wf-navy--darker:#000820;--wf-navy--lighter:#13253A;--wf-navy--main:#05192D;--wf-navy--subtler:#213147;--wf-navy--text:#213147;--wf-navy--text-on-color:#FFFFFF;--wf-navy--transparent:rgba(5, 25, 45, 0.1);--wf-orange--darker:#D87300;--wf-orange--lighter:#FFBC4B;--wf-orange--main:#FF931E;--wf-orange--text:#FF931E;--wf-orange--text-on-color:#05192D;--wf-orange--transparent:rgba(255, 147, 30, 0.2);--wf-pink--darker:#DC4D8B;--wf-pink--lighter:#FF95CF;--wf-pink--main:#FF80B4;--wf-pink--text:#FF80B4;--wf-pink--text-on-color:#05192D;--wf-pink--transparent:rgba(220, 77, 139, 0.2);--wf-purple--darker:#5646A5;--wf-purple--lighter:#B08EFF;--wf-purple--main:#7933FF;--wf-purple--text:#B08EFF;--wf-purple--text-on-color:#FFFFFF;--wf-purple--transparent:rgba(121, 51, 255, 0.18);--wf-red--darker:#BE2705;--wf-red--lighter:#FF6752;--wf-red--main:#DD3400;--wf-red--text:#FF6752;--wf-red--text-on-color:#FFFFFF;--wf-red--transparent:rgba(190, 39, 5, 0.16);--wf-success--darker:#00C74E;--wf-success--lighter:#65FF8F;--wf-success--main:#03EF62;--wf-success--text:#03EF62;--wf-success--text-on-color:#05192D;--wf-success--transparent:rgba(3, 239, 98, 0.2);--wf-text--inverse:#05192D;--wf-text--inverse-subtle:#5D6A77;--wf-text--link:#5EB1FF;--wf-text--main:#EFEFF5;--wf-text--secondary:#E1E1E8;--wf-text--subtle:#9BA3AB;--wf-transparent-grey--darker:rgba(255, 255, 255, 0.3);--wf-transparent-grey--lighter:rgba(255, 255, 255, 0.15);--wf-transparent-grey--main:rgba(255, 255, 255, 0.2);--wf-transparent-grey--subtler:rgba(255, 255, 255, 0.1);--wf-transparent-grey--text:#E1E1E8;--wf-transparent-grey--text-on-color:#FFFFFF;--wf-upgrade--darker:#5646A5;--wf-upgrade--lighter:#B08EFF;--wf-upgrade--main:#7933FF;--wf-upgrade--text:#B08EFF;--wf-upgrade--text-on-color:#FFFFFF;--wf-upgrade--transparent:rgba(121, 51, 255, 0.2);--wf-warning--darker:#D87300;--wf-warning--lighter:#FFBC4B;--wf-warning--main:#FF931E;--wf-warning--text:#FF931E;--wf-warning--text-on-color:#05192D;--wf-warning--transparent:rgba(255, 188, 75, 0.2);--wf-white--main:#FFFFFF;--wf-white--text:#FFFFFF;--wf-white--text-on-color:#05192D;--wf-white--transparent:rgba(255, 255, 255, 0.2);--wf-yellow--darker:#CFA600;--wf-yellow--lighter:#FFEC3C;--wf-yellow--main:#FCCE0D;--wf-yellow--text:#FCCE0D;--wf-yellow--text-on-color:#05192D;--wf-yellow--transparent:rgba(252, 206, 13, 0.18);}.css-1x0bpc3[data-theme=\"light\"]{-webkit-print-color-scheme:light;color-scheme:light;--wf-bg--active:rgba(48, 57, 105, 0.1);--wf-bg--contrast:#FFFFFF;--wf-bg--contrast-inverse:#05192D;--wf-bg--focus:rgba(48, 57, 105, 0.06);--wf-bg--hover:rgba(48, 57, 105, 0.06);--wf-bg--hover-strong:rgba(48, 57, 105, 0.1);--wf-bg--hover-strong-inverse:rgba(255, 255, 255, 0.2);--wf-bg--main:#F7F7FC;--wf-bg--secondary:#EFEFF5;--wf-bg--tertiary:#E8E8EE;--wf-bg--transparent:rgba(48, 57, 105, 0.1);--wf-bg--transparent-inverse:rgba(255, 255, 255, 0.2);--wf-blue--darker:#257DFE;--wf-blue--lighter:#72E5FE;--wf-blue--main:#5EB1FF;--wf-blue--text:#0065D1;--wf-blue--text-on-color:#05192D;--wf-blue--transparent:rgba(37, 125, 254, 0.12);--wf-border-color--focus-outline:#257DFE;--wf-border-color--interactive:rgba(48, 57, 105, 0.6);--wf-border-color--main:rgba(48, 57, 105, 0.15);--wf-border-color--strong:rgba(48, 57, 105, 0.3);--wf-box-shadow--medium:0px 1px 4px -1px rgba(48, 57, 105, 0.3);--wf-box-shadow--thick:0px 3px 5px -1px rgba(48, 57, 105, 0.3);--wf-box-shadow--thin:0px 0px 2px 0px rgba(48, 57, 105, 0.3);--wf-box-shadow--xthick:0px 8px 12px -4px rgba(48, 57, 105, 0.3);--wf-brand--darker:#00C74E;--wf-brand--lighter:#65FF8F;--wf-brand--main:#03EF62;--wf-brand--text:#05192D;--wf-brand--text-on-color:#05192D;--wf-brand--text-subtle:rgba(48, 57, 105, 0.6);--wf-error--darker:#BE2705;--wf-error--lighter:#FF6752;--wf-error--main:#DD3400;--wf-error--text:#C01100;--wf-error--text-on-color:#FFFFFF;--wf-error--transparent:rgba(255, 73, 48, 0.1);--wf-green--darker:#00C74E;--wf-green--lighter:#65FF8F;--wf-green--main:#03EF62;--wf-green--text:#008031;--wf-green--text-on-color:#05192D;--wf-green--transparent:rgba(101, 255, 143, 0.2);--wf-grey--darker:#E1E1E8;--wf-grey--lighter:#EFEFF5;--wf-grey--main:#E8E8EE;--wf-grey--subtler:#F7F7FC;--wf-grey--text:#848492;--wf-grey--text-on-color:#05192D;--wf-grey--transparent:rgba(48, 57, 105, 0.1);--wf-info--darker:#257DFE;--wf-info--lighter:#72E5FE;--wf-info--main:#5EB1FF;--wf-info--text:#0065D1;--wf-info--text-on-color:#05192D;--wf-info--transparent:rgba(94, 177, 225, 0.2);--wf-navy--darker:#000820;--wf-navy--lighter:#13253A;--wf-navy--main:#05192D;--wf-navy--subtler:#213147;--wf-navy--text:#05192D;--wf-navy--text-on-color:#FFFFFF;--wf-navy--transparent:rgba(5, 25, 45, 0.1);--wf-orange--darker:#D87300;--wf-orange--lighter:#FFBC4B;--wf-orange--main:#FF931E;--wf-orange--text:#A85200;--wf-orange--text-on-color:#05192D;--wf-orange--transparent:rgba(255, 188, 75, 0.2);--wf-pink--darker:#DC4D8B;--wf-pink--lighter:#FF95CF;--wf-pink--main:#FF80B4;--wf-pink--text:#BF3072;--wf-pink--text-on-color:#05192D;--wf-pink--transparent:rgba(255, 149, 207, 0.18);--wf-purple--darker:#5646A5;--wf-purple--lighter:#B08EFF;--wf-purple--main:#7933FF;--wf-purple--text:#5646A5;--wf-purple--text-on-color:#FFFFFF;--wf-purple--transparent:rgba(121, 51, 255, 0.18);--wf-red--darker:#BE2705;--wf-red--lighter:#FF6752;--wf-red--main:#DD3400;--wf-red--text:#C01100;--wf-red--text-on-color:#FFFFFF;--wf-red--transparent:rgba(255, 73, 48, 0.18);--wf-success--darker:#00C74E;--wf-success--lighter:#65FF8F;--wf-success--main:#03EF62;--wf-success--text:#008031;--wf-success--text-on-color:#05192D;--wf-success--transparent:rgba(3, 239, 98, 0.1);--wf-text--inverse:#FFFFFF;--wf-text--inverse-subtle:#9BA3AB;--wf-text--link:#0065D1;--wf-text--main:#05192D;--wf-text--secondary:#213147;--wf-text--subtle:#5D6A77;--wf-transparent-grey--darker:rgba(48, 57, 105, 0.3);--wf-transparent-grey--lighter:rgba(48, 57, 105, 0.15);--wf-transparent-grey--main:rgba(48, 57, 105, 0.2);--wf-transparent-grey--subtler:rgba(48, 57, 105, 0.1);--wf-transparent-grey--text:#595D78;--wf-transparent-grey--text-on-color:#05192D;--wf-upgrade--darker:#5646A5;--wf-upgrade--lighter:#B08EFF;--wf-upgrade--main:#7933FF;--wf-upgrade--text:#5646A5;--wf-upgrade--text-on-color:#FFFFFF;--wf-upgrade--transparent:rgba(121, 51, 255, 0.1);--wf-warning--darker:#D87300;--wf-warning--lighter:#FFBC4B;--wf-warning--main:#FF931E;--wf-warning--text:#A85200;--wf-warning--text-on-color:#05192D;--wf-warning--transparent:rgba(255, 188, 75, 0.2);--wf-white--main:#FFFFFF;--wf-white--text:#FFFFFF;--wf-white--text-on-color:#05192D;--wf-white--transparent:rgba(255, 255, 255, 0.2);--wf-yellow--darker:#CFA600;--wf-yellow--lighter:#FFEC3C;--wf-yellow--main:#FCCE0D;--wf-yellow--text:#926904;--wf-yellow--text-on-color:#05192D;--wf-yellow--transparent:rgba(255, 236, 60, 0.2);}</style><hr class=\"css-1x0bpc3\"/><style data-emotion=\"css 7ker16\">.css-7ker16{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:0 auto;max-width:100%;padding:0 16px;}.css-7ker16[data-theme=\"dark\"] *{-webkit-print-color-scheme:dark;color-scheme:dark;--wf-bg--active:rgba(255, 255, 255, 0.1);--wf-bg--contrast:#213147;--wf-bg--contrast-inverse:#FFFFFF;--wf-bg--focus:rgba(255, 255, 255, 0.06);--wf-bg--hover:rgba(255, 255, 255, 0.06);--wf-bg--hover-strong:rgba(255, 255, 255, 0.2);--wf-bg--hover-strong-inverse:rgba(48, 57, 105, 0.1);--wf-bg--main:#05192D;--wf-bg--secondary:#13253A;--wf-bg--tertiary:#000820;--wf-bg--transparent:rgba(255, 255, 255, 0.2);--wf-bg--transparent-inverse:rgba(48, 57, 105, 0.1);--wf-blue--darker:#257DFE;--wf-blue--lighter:#72E5FE;--wf-blue--main:#5EB1FF;--wf-blue--text:#5EB1FF;--wf-blue--text-on-color:#05192D;--wf-blue--transparent:rgba(37, 125, 254, 0.15);--wf-border-color--focus-outline:#257DFE;--wf-border-color--interactive:rgba(255, 255, 255, 0.6);--wf-border-color--main:rgba(255, 255, 255, 0.15);--wf-border-color--strong:rgba(255, 255, 255, 0.3);--wf-box-shadow--medium:0px 3px 10px -1px rgba(0, 8, 32, 0.8);--wf-box-shadow--thick:0px 5px 15px -1px rgba(0, 8, 32, 0.8);--wf-box-shadow--thin:0px 0px 3px 0px rgba(0, 8, 32, 0.8);--wf-box-shadow--xthick:0px 8px 20px -4px rgba(0, 8, 32, 0.8);--wf-brand--darker:#00C74E;--wf-brand--lighter:#65FF8F;--wf-brand--main:#03EF62;--wf-brand--text:#FFFFFF;--wf-brand--text-on-color:#05192D;--wf-brand--text-subtle:rgba(255, 255, 255, 0.6);--wf-error--darker:#BE2705;--wf-error--lighter:#FF6752;--wf-error--main:#DD3400;--wf-error--text:#FF6752;--wf-error--text-on-color:#FFFFFF;--wf-error--transparent:rgba(255, 73, 48, 0.2);--wf-green--darker:#00C74E;--wf-green--lighter:#65FF8F;--wf-green--main:#03EF62;--wf-green--text:#03EF62;--wf-green--text-on-color:#05192D;--wf-green--transparent:rgba(101, 255, 143, 0.2);--wf-grey--darker:#E1E1E8;--wf-grey--lighter:#EFEFF5;--wf-grey--main:#E8E8EE;--wf-grey--subtler:#F7F7FC;--wf-grey--text:#F7F7FC;--wf-grey--text-on-color:#05192D;--wf-grey--transparent:rgba(255, 255, 255, 0.1);--wf-info--darker:#257DFE;--wf-info--lighter:#72E5FE;--wf-info--main:#5EB1FF;--wf-info--text:#5EB1FF;--wf-info--text-on-color:#05192D;--wf-info--transparent:rgba(94, 177, 225, 0.2);--wf-navy--darker:#000820;--wf-navy--lighter:#13253A;--wf-navy--main:#05192D;--wf-navy--subtler:#213147;--wf-navy--text:#213147;--wf-navy--text-on-color:#FFFFFF;--wf-navy--transparent:rgba(5, 25, 45, 0.1);--wf-orange--darker:#D87300;--wf-orange--lighter:#FFBC4B;--wf-orange--main:#FF931E;--wf-orange--text:#FF931E;--wf-orange--text-on-color:#05192D;--wf-orange--transparent:rgba(255, 147, 30, 0.2);--wf-pink--darker:#DC4D8B;--wf-pink--lighter:#FF95CF;--wf-pink--main:#FF80B4;--wf-pink--text:#FF80B4;--wf-pink--text-on-color:#05192D;--wf-pink--transparent:rgba(220, 77, 139, 0.2);--wf-purple--darker:#5646A5;--wf-purple--lighter:#B08EFF;--wf-purple--main:#7933FF;--wf-purple--text:#B08EFF;--wf-purple--text-on-color:#FFFFFF;--wf-purple--transparent:rgba(121, 51, 255, 0.18);--wf-red--darker:#BE2705;--wf-red--lighter:#FF6752;--wf-red--main:#DD3400;--wf-red--text:#FF6752;--wf-red--text-on-color:#FFFFFF;--wf-red--transparent:rgba(190, 39, 5, 0.16);--wf-success--darker:#00C74E;--wf-success--lighter:#65FF8F;--wf-success--main:#03EF62;--wf-success--text:#03EF62;--wf-success--text-on-color:#05192D;--wf-success--transparent:rgba(3, 239, 98, 0.2);--wf-text--inverse:#05192D;--wf-text--inverse-subtle:#5D6A77;--wf-text--link:#5EB1FF;--wf-text--main:#EFEFF5;--wf-text--secondary:#E1E1E8;--wf-text--subtle:#9BA3AB;--wf-transparent-grey--darker:rgba(255, 255, 255, 0.3);--wf-transparent-grey--lighter:rgba(255, 255, 255, 0.15);--wf-transparent-grey--main:rgba(255, 255, 255, 0.2);--wf-transparent-grey--subtler:rgba(255, 255, 255, 0.1);--wf-transparent-grey--text:#E1E1E8;--wf-transparent-grey--text-on-color:#FFFFFF;--wf-upgrade--darker:#5646A5;--wf-upgrade--lighter:#B08EFF;--wf-upgrade--main:#7933FF;--wf-upgrade--text:#B08EFF;--wf-upgrade--text-on-color:#FFFFFF;--wf-upgrade--transparent:rgba(121, 51, 255, 0.2);--wf-warning--darker:#D87300;--wf-warning--lighter:#FFBC4B;--wf-warning--main:#FF931E;--wf-warning--text:#FF931E;--wf-warning--text-on-color:#05192D;--wf-warning--transparent:rgba(255, 188, 75, 0.2);--wf-white--main:#FFFFFF;--wf-white--text:#FFFFFF;--wf-white--text-on-color:#05192D;--wf-white--transparent:rgba(255, 255, 255, 0.2);--wf-yellow--darker:#CFA600;--wf-yellow--lighter:#FFEC3C;--wf-yellow--main:#FCCE0D;--wf-yellow--text:#FCCE0D;--wf-yellow--text-on-color:#05192D;--wf-yellow--transparent:rgba(252, 206, 13, 0.18);}.css-7ker16[data-theme=\"light\"] *{-webkit-print-color-scheme:light;color-scheme:light;--wf-bg--active:rgba(48, 57, 105, 0.1);--wf-bg--contrast:#FFFFFF;--wf-bg--contrast-inverse:#05192D;--wf-bg--focus:rgba(48, 57, 105, 0.06);--wf-bg--hover:rgba(48, 57, 105, 0.06);--wf-bg--hover-strong:rgba(48, 57, 105, 0.1);--wf-bg--hover-strong-inverse:rgba(255, 255, 255, 0.2);--wf-bg--main:#F7F7FC;--wf-bg--secondary:#EFEFF5;--wf-bg--tertiary:#E8E8EE;--wf-bg--transparent:rgba(48, 57, 105, 0.1);--wf-bg--transparent-inverse:rgba(255, 255, 255, 0.2);--wf-blue--darker:#257DFE;--wf-blue--lighter:#72E5FE;--wf-blue--main:#5EB1FF;--wf-blue--text:#0065D1;--wf-blue--text-on-color:#05192D;--wf-blue--transparent:rgba(37, 125, 254, 0.12);--wf-border-color--focus-outline:#257DFE;--wf-border-color--interactive:rgba(48, 57, 105, 0.6);--wf-border-color--main:rgba(48, 57, 105, 0.15);--wf-border-color--strong:rgba(48, 57, 105, 0.3);--wf-box-shadow--medium:0px 1px 4px -1px rgba(48, 57, 105, 0.3);--wf-box-shadow--thick:0px 3px 5px -1px rgba(48, 57, 105, 0.3);--wf-box-shadow--thin:0px 0px 2px 0px rgba(48, 57, 105, 0.3);--wf-box-shadow--xthick:0px 8px 12px -4px rgba(48, 57, 105, 0.3);--wf-brand--darker:#00C74E;--wf-brand--lighter:#65FF8F;--wf-brand--main:#03EF62;--wf-brand--text:#05192D;--wf-brand--text-on-color:#05192D;--wf-brand--text-subtle:rgba(48, 57, 105, 0.6);--wf-error--darker:#BE2705;--wf-error--lighter:#FF6752;--wf-error--main:#DD3400;--wf-error--text:#C01100;--wf-error--text-on-color:#FFFFFF;--wf-error--transparent:rgba(255, 73, 48, 0.1);--wf-green--darker:#00C74E;--wf-green--lighter:#65FF8F;--wf-green--main:#03EF62;--wf-green--text:#008031;--wf-green--text-on-color:#05192D;--wf-green--transparent:rgba(101, 255, 143, 0.2);--wf-grey--darker:#E1E1E8;--wf-grey--lighter:#EFEFF5;--wf-grey--main:#E8E8EE;--wf-grey--subtler:#F7F7FC;--wf-grey--text:#848492;--wf-grey--text-on-color:#05192D;--wf-grey--transparent:rgba(48, 57, 105, 0.1);--wf-info--darker:#257DFE;--wf-info--lighter:#72E5FE;--wf-info--main:#5EB1FF;--wf-info--text:#0065D1;--wf-info--text-on-color:#05192D;--wf-info--transparent:rgba(94, 177, 225, 0.2);--wf-navy--darker:#000820;--wf-navy--lighter:#13253A;--wf-navy--main:#05192D;--wf-navy--subtler:#213147;--wf-navy--text:#05192D;--wf-navy--text-on-color:#FFFFFF;--wf-navy--transparent:rgba(5, 25, 45, 0.1);--wf-orange--darker:#D87300;--wf-orange--lighter:#FFBC4B;--wf-orange--main:#FF931E;--wf-orange--text:#A85200;--wf-orange--text-on-color:#05192D;--wf-orange--transparent:rgba(255, 188, 75, 0.2);--wf-pink--darker:#DC4D8B;--wf-pink--lighter:#FF95CF;--wf-pink--main:#FF80B4;--wf-pink--text:#BF3072;--wf-pink--text-on-color:#05192D;--wf-pink--transparent:rgba(255, 149, 207, 0.18);--wf-purple--darker:#5646A5;--wf-purple--lighter:#B08EFF;--wf-purple--main:#7933FF;--wf-purple--text:#5646A5;--wf-purple--text-on-color:#FFFFFF;--wf-purple--transparent:rgba(121, 51, 255, 0.18);--wf-red--darker:#BE2705;--wf-red--lighter:#FF6752;--wf-red--main:#DD3400;--wf-red--text:#C01100;--wf-red--text-on-color:#FFFFFF;--wf-red--transparent:rgba(255, 73, 48, 0.18);--wf-success--darker:#00C74E;--wf-success--lighter:#65FF8F;--wf-success--main:#03EF62;--wf-success--text:#008031;--wf-success--text-on-color:#05192D;--wf-success--transparent:rgba(3, 239, 98, 0.1);--wf-text--inverse:#FFFFFF;--wf-text--inverse-subtle:#9BA3AB;--wf-text--link:#0065D1;--wf-text--main:#05192D;--wf-text--secondary:#213147;--wf-text--subtle:#5D6A77;--wf-transparent-grey--darker:rgba(48, 57, 105, 0.3);--wf-transparent-grey--lighter:rgba(48, 57, 105, 0.15);--wf-transparent-grey--main:rgba(48, 57, 105, 0.2);--wf-transparent-grey--subtler:rgba(48, 57, 105, 0.1);--wf-transparent-grey--text:#595D78;--wf-transparent-grey--text-on-color:#05192D;--wf-upgrade--darker:#5646A5;--wf-upgrade--lighter:#B08EFF;--wf-upgrade--main:#7933FF;--wf-upgrade--text:#5646A5;--wf-upgrade--text-on-color:#FFFFFF;--wf-upgrade--transparent:rgba(121, 51, 255, 0.1);--wf-warning--darker:#D87300;--wf-warning--lighter:#FFBC4B;--wf-warning--main:#FF931E;--wf-warning--text:#A85200;--wf-warning--text-on-color:#05192D;--wf-warning--transparent:rgba(255, 188, 75, 0.2);--wf-white--main:#FFFFFF;--wf-white--text:#FFFFFF;--wf-white--text-on-color:#05192D;--wf-white--transparent:rgba(255, 255, 255, 0.2);--wf-yellow--darker:#CFA600;--wf-yellow--lighter:#FFEC3C;--wf-yellow--main:#FCCE0D;--wf-yellow--text:#926904;--wf-yellow--text-on-color:#05192D;--wf-yellow--transparent:rgba(255, 236, 60, 0.2);}@media screen and (min-width: 480px){.css-7ker16{max-width:1200px;}}</style><div class=\"css-7ker16\"><style data-emotion=\"css 178yklu\">.css-178yklu{margin-top:24px;}</style><div class=\"css-178yklu\"><section class=\"text-xl text-gray-500\"><a href=\"/packages/sparklyr/versions/0.8.0\">sparklyr<!-- --> (version <!-- -->0.8.0<!-- -->)</a></section><div class=\"mt-2 prose-sm prose sm:prose max-w-none sm:max-w-none\"><header><h1><span style=\"display:block;visibility:hidden\"><span>ft_one_hot_encoder: Feature Transformation -- OneHotEncoder (Transformer)</span></span></h1></header><section><h2>Description</h2><span style=\"display:block;visibility:hidden\"><span><p>One-hot encoding maps a column of label indices to a column of binary\n    vectors, with at most a single one-value. This encoding allows algorithms\n    which expect continuous features, such as Logistic Regression, to use\n    categorical features. Typically, used with  <code>ft_string_indexer()</code> to\n    index a column first.</p></span></span></section><section><h2>Usage</h2><pre><span style=\"display:block;visibility:hidden\"><span>ft_one_hot_encoder(x, input_col, output_col, drop_last = TRUE,\n      uid = random_string(\"one_hot_encoder_\"), ...)</span></span></pre></section><section><h2>Arguments</h2><div class=\"mt-6 md:flex\"><div class=\"font-mono font-bold truncate md:w-3/12 lg:w-2/12\"><span style=\"display:block;visibility:hidden\"><span>x</span></span></div><div class=\"-mt-4 md:-mt-5 md:w-9/12 md:pl-5 lg:w-10/12\"><span style=\"display:block;visibility:hidden\"><span><p>A <code>spark_connection</code>, <code>ml_pipeline</code>, or a <code>tbl_spark</code>.</p></span></span></div></div><div class=\"mt-6 md:flex\"><div class=\"font-mono font-bold truncate md:w-3/12 lg:w-2/12\"><span style=\"display:block;visibility:hidden\"><span>input_col</span></span></div><div class=\"-mt-4 md:-mt-5 md:w-9/12 md:pl-5 lg:w-10/12\"><span style=\"display:block;visibility:hidden\"><span><p>The name of the input column.</p></span></span></div></div><div class=\"mt-6 md:flex\"><div class=\"font-mono font-bold truncate md:w-3/12 lg:w-2/12\"><span style=\"display:block;visibility:hidden\"><span>output_col</span></span></div><div class=\"-mt-4 md:-mt-5 md:w-9/12 md:pl-5 lg:w-10/12\"><span style=\"display:block;visibility:hidden\"><span><p>The name of the output column.</p></span></span></div></div><div class=\"mt-6 md:flex\"><div class=\"font-mono font-bold truncate md:w-3/12 lg:w-2/12\"><span style=\"display:block;visibility:hidden\"><span>drop_last</span></span></div><div class=\"-mt-4 md:-mt-5 md:w-9/12 md:pl-5 lg:w-10/12\"><span style=\"display:block;visibility:hidden\"><span><p>Whether to drop the last category. Defaults to <code>TRUE</code>.</p></span></span></div></div><div class=\"mt-6 md:flex\"><div class=\"font-mono font-bold truncate md:w-3/12 lg:w-2/12\"><span style=\"display:block;visibility:hidden\"><span>uid</span></span></div><div class=\"-mt-4 md:-mt-5 md:w-9/12 md:pl-5 lg:w-10/12\"><span style=\"display:block;visibility:hidden\"><span><p>A character string used to uniquely identify the feature transformer.</p></span></span></div></div><div class=\"mt-6 md:flex\"><div class=\"font-mono font-bold truncate md:w-3/12 lg:w-2/12\"><span style=\"display:block;visibility:hidden\"><span>...</span></span></div><div class=\"-mt-4 md:-mt-5 md:w-9/12 md:pl-5 lg:w-10/12\"><span style=\"display:block;visibility:hidden\"><span><p>Optional arguments; currently unused.</p></span></span></div></div></section><section><h2>Value</h2><span style=\"display:block;visibility:hidden\"><span class=\"list-view\"><p>The object returned depends on the class of <code>x</code>.</p><ul>\n    <li><p><code>spark_connection</code>: When <code>x</code> is a <code>spark_connection</code>, the function returns a <code>ml_transformer</code>,\n      a <code>ml_estimator</code>, or one of their subclasses. The object contains a pointer to\n      a Spark <code>Transformer</code> or <code>Estimator</code> object and can be used to compose\n      <code>Pipeline</code> objects.</p></li>\n    <li><p><code>ml_pipeline</code>: When <code>x</code> is a <code>ml_pipeline</code>, the function returns a <code>ml_pipeline</code> with\n      the transformer or estimator appended to the pipeline.</p></li>\n    <li><p><code>tbl_spark</code>: When <code>x</code> is a <code>tbl_spark</code>, a transformer is constructed then\n      immediately applied to the input <code>tbl_spark</code>, returning a <code>tbl_spark</code></p></li>\n    </ul>\n    </span></span></section><section><h2>See Also</h2><span style=\"display:block;visibility:hidden\"><span><p>See <a href=\"http://spark.apache.org/docs/latest/ml-features.html\">http://spark.apache.org/docs/latest/ml-features.html</a> for\n      more information on the set of transformations available for DataFrame\n      columns in Spark.</p>\n    <p>Other feature transformers: <code><a rd-options=\"\" href=\"/link/ft_binarizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_binarizer\">ft_binarizer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_bucketizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_bucketizer\">ft_bucketizer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_chisq_selector?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_chisq_selector\">ft_chisq_selector</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_count_vectorizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_count_vectorizer\">ft_count_vectorizer</a></code>, <code><a rd-options=\"\" href=\"/link/ft_dct?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_dct\">ft_dct</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_elementwise_product?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_elementwise_product\">ft_elementwise_product</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_feature_hasher?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_feature_hasher\">ft_feature_hasher</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_hashing_tf?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_hashing_tf\">ft_hashing_tf</a></code>, <code><a rd-options=\"\" href=\"/link/ft_idf?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_idf\">ft_idf</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_imputer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_imputer\">ft_imputer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_index_to_string?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_index_to_string\">ft_index_to_string</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_interaction?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_interaction\">ft_interaction</a></code>, <code><a rd-options=\"\" href=\"/link/ft_lsh?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_lsh\">ft_lsh</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_max_abs_scaler?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_max_abs_scaler\">ft_max_abs_scaler</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_min_max_scaler?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_min_max_scaler\">ft_min_max_scaler</a></code>, <code><a rd-options=\"\" href=\"/link/ft_ngram?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_ngram\">ft_ngram</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_normalizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_normalizer\">ft_normalizer</a></code>, <code><a rd-options=\"\" href=\"/link/ft_pca?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_pca\">ft_pca</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_polynomial_expansion?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_polynomial_expansion\">ft_polynomial_expansion</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_quantile_discretizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_quantile_discretizer\">ft_quantile_discretizer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_r_formula?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_r_formula\">ft_r_formula</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_regex_tokenizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_regex_tokenizer\">ft_regex_tokenizer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_sql_transformer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_sql_transformer\">ft_sql_transformer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_standard_scaler?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_standard_scaler\">ft_standard_scaler</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_stop_words_remover?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_stop_words_remover\">ft_stop_words_remover</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_string_indexer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_string_indexer\">ft_string_indexer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_tokenizer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_tokenizer\">ft_tokenizer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_vector_assembler?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_assembler\">ft_vector_assembler</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_vector_indexer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_indexer\">ft_vector_indexer</a></code>,\n      <code><a rd-options=\"\" href=\"/link/ft_vector_slicer?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_vector_slicer\">ft_vector_slicer</a></code>, <code><a rd-options=\"\" href=\"/link/ft_word2vec?package=sparklyr&version=0.8.0\" data-mini-rdoc=\"sparklyr::ft_word2vec\">ft_word2vec</a></code></p></span></span></section></div></div></div></div><script id=\"__NEXT_DATA__\" type=\"application/json\">{\"props\":{\"pageProps\":{\"topicData\":{\"uri\":\"/packages/sparklyr/versions/0.8.0/topics/ft_one_hot_encoder\",\"api_uri\":\"/api/packages/sparklyr/versions/0.8.0/topics/ft_one_hot_encoder\",\"id\":7909907,\"name\":\"ft_one_hot_encoder\",\"title\":\"Feature Transformation -- OneHotEncoder (Transformer)\",\"description\":\"\\u003cp\\u003eOne-hot encoding maps a column of label indices to a column of binary\\nvectors, with at most a single one-value. This encoding allows algorithms\\nwhich expect continuous features, such as Logistic Regression, to use\\ncategorical features. Typically, used with  \\u003ccode\\u003eft_string_indexer()\\u003c/code\\u003e to\\nindex a column first.\\u003c/p\\u003e\",\"usage\":\"ft_one_hot_encoder(x, input_col, output_col, drop_last = TRUE,\\n  uid = random_string(\\\"one_hot_encoder_\\\"), ...)\",\"details\":null,\"value\":\"\\u003cp\\u003eThe object returned depends on the class of \\u003ccode\\u003ex\\u003c/code\\u003e.\\u003c/p\\u003e\\u003cul\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003ccode\\u003espark_connection\\u003c/code\\u003e: When \\u003ccode\\u003ex\\u003c/code\\u003e is a \\u003ccode\\u003espark_connection\\u003c/code\\u003e, the function returns a \\u003ccode\\u003eml_transformer\\u003c/code\\u003e,\\n  a \\u003ccode\\u003eml_estimator\\u003c/code\\u003e, or one of their subclasses. The object contains a pointer to\\n  a Spark \\u003ccode\\u003eTransformer\\u003c/code\\u003e or \\u003ccode\\u003eEstimator\\u003c/code\\u003e object and can be used to compose\\n  \\u003ccode\\u003ePipeline\\u003c/code\\u003e objects.\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003ccode\\u003eml_pipeline\\u003c/code\\u003e: When \\u003ccode\\u003ex\\u003c/code\\u003e is a \\u003ccode\\u003eml_pipeline\\u003c/code\\u003e, the function returns a \\u003ccode\\u003eml_pipeline\\u003c/code\\u003e with\\n  the transformer or estimator appended to the pipeline.\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003ccode\\u003etbl_spark\\u003c/code\\u003e: When \\u003ccode\\u003ex\\u003c/code\\u003e is a \\u003ccode\\u003etbl_spark\\u003c/code\\u003e, a transformer is constructed then\\n  immediately applied to the input \\u003ccode\\u003etbl_spark\\u003c/code\\u003e, returning a \\u003ccode\\u003etbl_spark\\u003c/code\\u003e\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\",\"references\":null,\"note\":null,\"author\":null,\"seealso\":\"\\u003cp\\u003eSee \\u003ca href=\\\"http://spark.apache.org/docs/latest/ml-features.html\\\"\\u003ehttp://spark.apache.org/docs/latest/ml-features.html\\u003c/a\\u003e for\\n  more information on the set of transformations available for DataFrame\\n  columns in Spark.\\u003c/p\\u003e\\n\\u003cp\\u003eOther feature transformers: \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_binarizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_binarizer\\\"\\u003eft_binarizer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_bucketizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_bucketizer\\\"\\u003eft_bucketizer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_chisq_selector?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_chisq_selector\\\"\\u003eft_chisq_selector\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_count_vectorizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_count_vectorizer\\\"\\u003eft_count_vectorizer\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_dct?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_dct\\\"\\u003eft_dct\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_elementwise_product?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_elementwise_product\\\"\\u003eft_elementwise_product\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_feature_hasher?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_feature_hasher\\\"\\u003eft_feature_hasher\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_hashing_tf?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_hashing_tf\\\"\\u003eft_hashing_tf\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_idf?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_idf\\\"\\u003eft_idf\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_imputer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_imputer\\\"\\u003eft_imputer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_index_to_string?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_index_to_string\\\"\\u003eft_index_to_string\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_interaction?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_interaction\\\"\\u003eft_interaction\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_lsh?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_lsh\\\"\\u003eft_lsh\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_max_abs_scaler?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_max_abs_scaler\\\"\\u003eft_max_abs_scaler\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_min_max_scaler?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_min_max_scaler\\\"\\u003eft_min_max_scaler\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_ngram?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_ngram\\\"\\u003eft_ngram\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_normalizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_normalizer\\\"\\u003eft_normalizer\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_pca?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_pca\\\"\\u003eft_pca\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_polynomial_expansion?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_polynomial_expansion\\\"\\u003eft_polynomial_expansion\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_quantile_discretizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_quantile_discretizer\\\"\\u003eft_quantile_discretizer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_r_formula?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_r_formula\\\"\\u003eft_r_formula\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_regex_tokenizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_regex_tokenizer\\\"\\u003eft_regex_tokenizer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_sql_transformer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_sql_transformer\\\"\\u003eft_sql_transformer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_standard_scaler?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_standard_scaler\\\"\\u003eft_standard_scaler\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_stop_words_remover?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_stop_words_remover\\\"\\u003eft_stop_words_remover\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_string_indexer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_string_indexer\\\"\\u003eft_string_indexer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_tokenizer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_tokenizer\\\"\\u003eft_tokenizer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_vector_assembler?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_vector_assembler\\\"\\u003eft_vector_assembler\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_vector_indexer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_vector_indexer\\\"\\u003eft_vector_indexer\\u003c/a\\u003e\\u003c/code\\u003e,\\n  \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_vector_slicer?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_vector_slicer\\\"\\u003eft_vector_slicer\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options=\\\"\\\" href=\\\"/link/ft_word2vec?package=sparklyr\\u0026version=0.8.0\\\" data-mini-rdoc=\\\"sparklyr::ft_word2vec\\\"\\u003eft_word2vec\\u003c/a\\u003e\\u003c/code\\u003e\\u003c/p\\u003e\",\"examples\":\"\",\"sourceJSON\":\"{\\\"name\\\":\\\"ft_one_hot_encoder\\\",\\\"title\\\":\\\"Feature Transformation -- OneHotEncoder (Transformer)\\\",\\\"pagetitle\\\":\\\"Feature Transformation -- OneHotEncoder (Transformer) \u2014 ft_one_hot_encoder\\\",\\\"aliases\\\":\\\"ft_one_hot_encoder\\\",\\\"author\\\":[],\\\"keywords\\\":[],\\\"description\\\":\\\"\\u003cp\\u003eOne-hot encoding maps a column of label indices to a column of binary\\\\nvectors, with at most a single one-value. This encoding allows algorithms\\\\nwhich expect continuous features, such as Logistic Regression, to use\\\\ncategorical features. Typically, used with  \\u003ccode\\u003eft_string_indexer()\\u003c/code\\u003e to\\\\nindex a column first.\\u003c/p\\u003e\\\",\\\"usage\\\":\\\"ft_one_hot_encoder(x, input_col, output_col, drop_last = TRUE,\\\\n  uid = random_string(\\\\\\\"one_hot_encoder_\\\\\\\"), ...)\\\",\\\"arguments\\\":[{\\\"name\\\":\\\"x\\\",\\\"description\\\":\\\"\\u003cp\\u003eA \\u003ccode\\u003espark_connection\\u003c/code\\u003e, \\u003ccode\\u003eml_pipeline\\u003c/code\\u003e, or a \\u003ccode\\u003etbl_spark\\u003c/code\\u003e.\\u003c/p\\u003e\\\"},{\\\"name\\\":\\\"input_col\\\",\\\"description\\\":\\\"\\u003cp\\u003eThe name of the input column.\\u003c/p\\u003e\\\"},{\\\"name\\\":\\\"output_col\\\",\\\"description\\\":\\\"\\u003cp\\u003eThe name of the output column.\\u003c/p\\u003e\\\"},{\\\"name\\\":\\\"drop_last\\\",\\\"description\\\":\\\"\\u003cp\\u003eWhether to drop the last category. Defaults to \\u003ccode\\u003eTRUE\\u003c/code\\u003e.\\u003c/p\\u003e\\\"},{\\\"name\\\":\\\"uid\\\",\\\"description\\\":\\\"\\u003cp\\u003eA character string used to uniquely identify the feature transformer.\\u003c/p\\u003e\\\"},{\\\"name\\\":\\\"...\\\",\\\"description\\\":\\\"\\u003cp\\u003eOptional arguments; currently unused.\\u003c/p\\u003e\\\"}],\\\"has_args\\\":true,\\\"sections\\\":[],\\\"value\\\":\\\"\\u003cp\\u003eThe object returned depends on the class of \\u003ccode\\u003ex\\u003c/code\\u003e.\\u003c/p\\u003e\\u003cul\\u003e\\\\n\\u003cli\\u003e\\u003cp\\u003e\\u003ccode\\u003espark_connection\\u003c/code\\u003e: When \\u003ccode\\u003ex\\u003c/code\\u003e is a \\u003ccode\\u003espark_connection\\u003c/code\\u003e, the function returns a \\u003ccode\\u003eml_transformer\\u003c/code\\u003e,\\\\n  a \\u003ccode\\u003eml_estimator\\u003c/code\\u003e, or one of their subclasses. The object contains a pointer to\\\\n  a Spark \\u003ccode\\u003eTransformer\\u003c/code\\u003e or \\u003ccode\\u003eEstimator\\u003c/code\\u003e object and can be used to compose\\\\n  \\u003ccode\\u003ePipeline\\u003c/code\\u003e objects.\\u003c/p\\u003e\\u003c/li\\u003e\\\\n\\u003cli\\u003e\\u003cp\\u003e\\u003ccode\\u003eml_pipeline\\u003c/code\\u003e: When \\u003ccode\\u003ex\\u003c/code\\u003e is a \\u003ccode\\u003eml_pipeline\\u003c/code\\u003e, the function returns a \\u003ccode\\u003eml_pipeline\\u003c/code\\u003e with\\\\n  the transformer or estimator appended to the pipeline.\\u003c/p\\u003e\\u003c/li\\u003e\\\\n\\u003cli\\u003e\\u003cp\\u003e\\u003ccode\\u003etbl_spark\\u003c/code\\u003e: When \\u003ccode\\u003ex\\u003c/code\\u003e is a \\u003ccode\\u003etbl_spark\\u003c/code\\u003e, a transformer is constructed then\\\\n  immediately applied to the input \\u003ccode\\u003etbl_spark\\u003c/code\\u003e, returning a \\u003ccode\\u003etbl_spark\\u003c/code\\u003e\\u003c/p\\u003e\\u003c/li\\u003e\\\\n\\u003c/ul\\u003e\\\\n\\\",\\\"seealso\\\":\\\"\\u003cp\\u003eSee \\u003ca href='http://spark.apache.org/docs/latest/ml-features.html'\\u003ehttp://spark.apache.org/docs/latest/ml-features.html\\u003c/a\\u003e for\\\\n  more information on the set of transformations available for DataFrame\\\\n  columns in Spark.\\u003c/p\\u003e\\\\n\\u003cp\\u003eOther feature transformers: \\u003ccode\\u003e\\u003ca rd-options='' href='ft_binarizer'\\u003eft_binarizer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_bucketizer'\\u003eft_bucketizer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_chisq_selector'\\u003eft_chisq_selector\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_count_vectorizer'\\u003eft_count_vectorizer\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options='' href='ft_dct'\\u003eft_dct\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_elementwise_product'\\u003eft_elementwise_product\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_feature_hasher'\\u003eft_feature_hasher\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_hashing_tf'\\u003eft_hashing_tf\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options='' href='ft_idf'\\u003eft_idf\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_imputer'\\u003eft_imputer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_index_to_string'\\u003eft_index_to_string\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_interaction'\\u003eft_interaction\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options='' href='ft_lsh'\\u003eft_lsh\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_max_abs_scaler'\\u003eft_max_abs_scaler\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_min_max_scaler'\\u003eft_min_max_scaler\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options='' href='ft_ngram'\\u003eft_ngram\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_normalizer'\\u003eft_normalizer\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options='' href='ft_pca'\\u003eft_pca\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_polynomial_expansion'\\u003eft_polynomial_expansion\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_quantile_discretizer'\\u003eft_quantile_discretizer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_r_formula'\\u003eft_r_formula\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_regex_tokenizer'\\u003eft_regex_tokenizer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_sql_transformer'\\u003eft_sql_transformer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_standard_scaler'\\u003eft_standard_scaler\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_stop_words_remover'\\u003eft_stop_words_remover\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_string_indexer'\\u003eft_string_indexer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_tokenizer'\\u003eft_tokenizer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_vector_assembler'\\u003eft_vector_assembler\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_vector_indexer'\\u003eft_vector_indexer\\u003c/a\\u003e\\u003c/code\\u003e,\\\\n  \\u003ccode\\u003e\\u003ca rd-options='' href='ft_vector_slicer'\\u003eft_vector_slicer\\u003c/a\\u003e\\u003c/code\\u003e, \\u003ccode\\u003e\\u003ca rd-options='' href='ft_word2vec'\\u003eft_word2vec\\u003c/a\\u003e\\u003c/code\\u003e\\u003c/p\\u003e\\\",\\\"package\\\":{\\\"package\\\":\\\"sparklyr\\\",\\\"version\\\":\\\"0.8.0\\\"}}\",\"created_at\":\"2018-04-30T17:33:13.000Z\",\"updated_at\":\"2018-04-30T17:33:13.000Z\",\"package_version_id\":110040,\"keywords\":[],\"user_examples\":[],\"package_version\":{\"uri\":\"/packages/sparklyr/versions/0.8.0\",\"api_uri\":\"/api/packages/sparklyr/versions/0.8.0\",\"canonicalLink\":null,\"id\":110040,\"package_name\":\"sparklyr\",\"version\":\"0.8.0\",\"title\":\"R Interface to Apache Spark\",\"description\":\"R interface to Apache Spark, a fast and general engine for big data\\nprocessing, see \\u003chttp://spark.apache.org\\u003e. This package supports connecting to\\nlocal and remote Apache Spark clusters, provides a 'dplyr' compatible back-end,\\nand provides an interface to Spark's built-in machine learning algorithms.\",\"release_date\":\"1970-01-01T00:00:00.000Z\",\"license\":\"Apache License 2.0 | file LICENSE\",\"url\":\"http://spark.rstudio.com\",\"copyright\":null,\"readmemd\":\"sparklyr: R interface for Apache Spark\\n================\\n\\n\\u003cimg src=\\\"tools/readme/sparklyr-package.png\\\" width=200 align=\\\"right\\\" style=\\\"margin-left: 20px; margin-right: 20px\\\"/\\u003e\\n\\n[![Build\\nStatus](https://travis-ci.org/rstudio/sparklyr.svg?branch=master)](https://travis-ci.org/rstudio/sparklyr)\\n[![CRAN\\\\_Status\\\\_Badge](https://www.r-pkg.org/badges/version/sparklyr)](https://cran.r-project.org/package=sparklyr)\\n[![codecov](https://codecov.io/gh/rstudio/sparklyr/branch/master/graph/badge.svg)](https://codecov.io/gh/rstudio/sparklyr)\\n[![Join the chat at\\nhttps://gitter.im/rstudio/sparklyr](https://badges.gitter.im/rstudio/sparklyr.svg)](https://gitter.im/rstudio/sparklyr?utm_source=badge\\u0026utm_medium=badge\\u0026utm_campaign=pr-badge\\u0026utm_content=badge)\\n\\n  - Connect to [Spark](http://spark.apache.org/) from R. The sparklyr\\n    package provides a complete [dplyr](https://github.com/hadley/dplyr)\\n    backend.\\n  - Filter and aggregate Spark datasets then bring them into R for\\n    analysis and visualization.\\n  - Use Spark\u2019s distributed [machine\\n    learning](http://spark.apache.org/docs/latest/mllib-guide.html)\\n    library from R.\\n  - Create [extensions](http://spark.rstudio.com/extensions.html) that\\n    call the full Spark API and provide interfaces to Spark packages.\\n\\n## Installation\\n\\nYou can install the **sparklyr** package from CRAN as follows:\\n\\n``` r\\ninstall.packages(\\\"sparklyr\\\")\\n```\\n\\nYou should also install a local version of Spark for development\\npurposes:\\n\\n``` r\\nlibrary(sparklyr)\\nspark_install(version = \\\"2.1.0\\\")\\n```\\n\\nTo upgrade to the latest version of sparklyr, run the following command\\nand restart your r session:\\n\\n``` r\\ndevtools::install_github(\\\"rstudio/sparklyr\\\")\\n```\\n\\nIf you use the RStudio IDE, you should also download the latest [preview\\nrelease](https://www.rstudio.com/products/rstudio/download/preview/) of\\nthe IDE which includes several enhancements for interacting with Spark\\n(see the [RStudio IDE](#rstudio-ide) section below for more details).\\n\\n## Connecting to Spark\\n\\nYou can connect to both local instances of Spark as well as remote Spark\\nclusters. Here we\u2019ll connect to a local instance of Spark via the\\n[spark\\\\_connect](http://spark.rstudio.com/reference/sparklyr/latest/spark_connect.html)\\nfunction:\\n\\n``` r\\nlibrary(sparklyr)\\nsc \\u003c- spark_connect(master = \\\"local\\\")\\n```\\n\\nThe returned Spark connection (`sc`) provides a remote dplyr data source\\nto the Spark cluster.\\n\\nFor more information on connecting to remote Spark clusters see the\\n[Deployment](http://spark.rstudio.com/deployment.html) section of the\\nsparklyr website.\\n\\n## Using dplyr\\n\\nWe can now use all of the available dplyr verbs against the tables\\nwithin the cluster.\\n\\nWe\u2019ll start by copying some datasets from R into the Spark cluster (note\\nthat you may need to install the nycflights13 and Lahman packages in\\norder to execute this code):\\n\\n``` r\\ninstall.packages(c(\\\"nycflights13\\\", \\\"Lahman\\\"))\\n```\\n\\n``` r\\nlibrary(dplyr)\\niris_tbl \\u003c- copy_to(sc, iris)\\nflights_tbl \\u003c- copy_to(sc, nycflights13::flights, \\\"flights\\\")\\nbatting_tbl \\u003c- copy_to(sc, Lahman::Batting, \\\"batting\\\")\\nsrc_tbls(sc)\\n```\\n\\n    ## [1] \\\"batting\\\" \\\"flights\\\" \\\"iris\\\"\\n\\nTo start with here\u2019s a simple filtering example:\\n\\n``` r\\n# filter by departure delay and print the first few records\\nflights_tbl %\\u003e% filter(dep_delay == 2)\\n```\\n\\n    ## # Source:   lazy query [?? x 19]\\n    ## # Database: spark_connection\\n    ##     year month   day dep_time sched_dep_time dep_delay arr_time\\n    ##    \\u003cint\\u003e \\u003cint\\u003e \\u003cint\\u003e    \\u003cint\\u003e          \\u003cint\\u003e     \\u003cdbl\\u003e    \\u003cint\\u003e\\n    ##  1  2013     1     1      517            515      2.00      830\\n    ##  2  2013     1     1      542            540      2.00      923\\n    ##  3  2013     1     1      702            700      2.00     1058\\n    ##  4  2013     1     1      715            713      2.00      911\\n    ##  5  2013     1     1      752            750      2.00     1025\\n    ##  6  2013     1     1      917            915      2.00     1206\\n    ##  7  2013     1     1      932            930      2.00     1219\\n    ##  8  2013     1     1     1028           1026      2.00     1350\\n    ##  9  2013     1     1     1042           1040      2.00     1325\\n    ## 10  2013     1     1     1231           1229      2.00     1523\\n    ## # ... with more rows, and 12 more variables: sched_arr_time \\u003cint\\u003e,\\n    ## #   arr_delay \\u003cdbl\\u003e, carrier \\u003cchr\\u003e, flight \\u003cint\\u003e, tailnum \\u003cchr\\u003e,\\n    ## #   origin \\u003cchr\\u003e, dest \\u003cchr\\u003e, air_time \\u003cdbl\\u003e, distance \\u003cdbl\\u003e, hour \\u003cdbl\\u003e,\\n    ## #   minute \\u003cdbl\\u003e, time_hour \\u003cdttm\\u003e\\n\\n[Introduction to dplyr](https://CRAN.R-project.org/package=dplyr)\\nprovides additional dplyr examples you can try. For example, consider\\nthe last example from the tutorial which plots data on flight delays:\\n\\n``` r\\ndelay \\u003c- flights_tbl %\\u003e% \\n  group_by(tailnum) %\\u003e%\\n  summarise(count = n(), dist = mean(distance), delay = mean(arr_delay)) %\\u003e%\\n  filter(count \\u003e 20, dist \\u003c 2000, !is.na(delay)) %\\u003e%\\n  collect\\n\\n# plot delays\\nlibrary(ggplot2)\\nggplot(delay, aes(dist, delay)) +\\n  geom_point(aes(size = count), alpha = 1/2) +\\n  geom_smooth() +\\n  scale_size_area(max_size = 2)\\n```\\n\\n    ## `geom_smooth()` using method = 'gam'\\n\\n![](tools/readme/ggplot2-1.png)\\u003c!-- --\\u003e\\n\\n### Window Functions\\n\\ndplyr [window functions](https://CRAN.R-project.org/package=dplyr) are\\nalso supported, for example:\\n\\n``` r\\nbatting_tbl %\\u003e%\\n  select(playerID, yearID, teamID, G, AB:H) %\\u003e%\\n  arrange(playerID, yearID, teamID) %\\u003e%\\n  group_by(playerID) %\\u003e%\\n  filter(min_rank(desc(H)) \\u003c= 2 \\u0026 H \\u003e 0)\\n```\\n\\n    ## # Source:     lazy query [?? x 7]\\n    ## # Database:   spark_connection\\n    ## # Groups:     playerID\\n    ## # Ordered by: playerID, yearID, teamID\\n    ##    playerID  yearID teamID     G    AB     R     H\\n    ##    \\u003cchr\\u003e      \\u003cint\\u003e \\u003cchr\\u003e  \\u003cint\\u003e \\u003cint\\u003e \\u003cint\\u003e \\u003cint\\u003e\\n    ##  1 aaronha01   1959 ML1      154   629   116   223\\n    ##  2 aaronha01   1963 ML1      161   631   121   201\\n    ##  3 abbotji01   1999 MIL       20    21     0     2\\n    ##  4 abnersh01   1992 CHA       97   208    21    58\\n    ##  5 abnersh01   1990 SDN       91   184    17    45\\n    ##  6 acklefr01   1963 CHA        2     5     0     1\\n    ##  7 acklefr01   1964 CHA        3     1     0     1\\n    ##  8 adamecr01   2016 COL      121   225    25    49\\n    ##  9 adamecr01   2015 COL       26    53     4    13\\n    ## 10 adamsac01   1943 NY1       70    32     3     4\\n    ## # ... with more rows\\n\\nFor additional documentation on using dplyr with Spark see the\\n[dplyr](http://spark.rstudio.com/dplyr.html) section of the sparklyr\\nwebsite.\\n\\n## Using SQL\\n\\nIt\u2019s also possible to execute SQL queries directly against tables within\\na Spark cluster. The `spark_connection` object implements a\\n[DBI](https://github.com/rstats-db/DBI) interface for Spark, so you can\\nuse `dbGetQuery` to execute SQL and return the result as an R data\\nframe:\\n\\n``` r\\nlibrary(DBI)\\niris_preview \\u003c- dbGetQuery(sc, \\\"SELECT * FROM iris LIMIT 10\\\")\\niris_preview\\n```\\n\\n    ##    Sepal_Length Sepal_Width Petal_Length Petal_Width Species\\n    ## 1           5.1         3.5          1.4         0.2  setosa\\n    ## 2           4.9         3.0          1.4         0.2  setosa\\n    ## 3           4.7         3.2          1.3         0.2  setosa\\n    ## 4           4.6         3.1          1.5         0.2  setosa\\n    ## 5           5.0         3.6          1.4         0.2  setosa\\n    ## 6           5.4         3.9          1.7         0.4  setosa\\n    ## 7           4.6         3.4          1.4         0.3  setosa\\n    ## 8           5.0         3.4          1.5         0.2  setosa\\n    ## 9           4.4         2.9          1.4         0.2  setosa\\n    ## 10          4.9         3.1          1.5         0.1  setosa\\n\\n## Machine Learning\\n\\nYou can orchestrate machine learning algorithms in a Spark cluster via\\nthe [machine\\nlearning](http://spark.apache.org/docs/latest/mllib-guide.html)\\nfunctions within **sparklyr**. These functions connect to a set of\\nhigh-level APIs built on top of DataFrames that help you create and tune\\nmachine learning workflows.\\n\\nHere\u2019s an example where we use\\n[ml\\\\_linear\\\\_regression](http://spark.rstudio.com/reference/sparklyr/latest/ml_linear_regression.html)\\nto fit a linear regression model. We\u2019ll use the built-in `mtcars`\\ndataset, and see if we can predict a car\u2019s fuel consumption (`mpg`)\\nbased on its weight (`wt`), and the number of cylinders the engine\\ncontains (`cyl`). We\u2019ll assume in each case that the relationship\\nbetween `mpg` and each of our features is linear.\\n\\n``` r\\n# copy mtcars into spark\\nmtcars_tbl \\u003c- copy_to(sc, mtcars)\\n\\n# transform our data set, and then partition into 'training', 'test'\\npartitions \\u003c- mtcars_tbl %\\u003e%\\n  filter(hp \\u003e= 100) %\\u003e%\\n  mutate(cyl8 = cyl == 8) %\\u003e%\\n  sdf_partition(training = 0.5, test = 0.5, seed = 1099)\\n\\n# fit a linear model to the training dataset\\nfit \\u003c- partitions$training %\\u003e%\\n  ml_linear_regression(response = \\\"mpg\\\", features = c(\\\"wt\\\", \\\"cyl\\\"))\\nfit\\n```\\n\\n    ## Formula: mpg ~ wt + cyl\\n    ## \\n    ## Coefficients:\\n    ## (Intercept)          wt         cyl \\n    ##   33.499452   -2.818463   -0.923187\\n\\nFor linear regression models produced by Spark, we can use `summary()`\\nto learn a bit more about the quality of our fit, and the statistical\\nsignificance of each of our predictors.\\n\\n``` r\\nsummary(fit)\\n```\\n\\n    ## Deviance Residuals:\\n    ##    Min     1Q Median     3Q    Max \\n    ## -1.752 -1.134 -0.499  1.296  2.282 \\n    ## \\n    ## Coefficients:\\n    ## (Intercept)          wt         cyl \\n    ##   33.499452   -2.818463   -0.923187 \\n    ## \\n    ## R-Squared: 0.8274\\n    ## Root Mean Squared Error: 1.422\\n\\nSpark machine learning supports a wide array of algorithms and feature\\ntransformations and as illustrated above it\u2019s easy to chain these\\nfunctions together with dplyr pipelines. To learn more see the [machine\\nlearning](mllib.html) section.\\n\\n## Reading and Writing Data\\n\\nYou can read and write data in CSV, JSON, and Parquet formats. Data can\\nbe stored in HDFS, S3, or on the local filesystem of cluster nodes.\\n\\n``` r\\ntemp_csv \\u003c- tempfile(fileext = \\\".csv\\\")\\ntemp_parquet \\u003c- tempfile(fileext = \\\".parquet\\\")\\ntemp_json \\u003c- tempfile(fileext = \\\".json\\\")\\n\\nspark_write_csv(iris_tbl, temp_csv)\\niris_csv_tbl \\u003c- spark_read_csv(sc, \\\"iris_csv\\\", temp_csv)\\n\\nspark_write_parquet(iris_tbl, temp_parquet)\\niris_parquet_tbl \\u003c- spark_read_parquet(sc, \\\"iris_parquet\\\", temp_parquet)\\n\\nspark_write_json(iris_tbl, temp_json)\\niris_json_tbl \\u003c- spark_read_json(sc, \\\"iris_json\\\", temp_json)\\n\\nsrc_tbls(sc)\\n```\\n\\n    ## [1] \\\"batting\\\"      \\\"flights\\\"      \\\"iris\\\"         \\\"iris_csv\\\"    \\n    ## [5] \\\"iris_json\\\"    \\\"iris_parquet\\\" \\\"mtcars\\\"\\n\\n## Distributed R\\n\\nYou can execute arbitrary r code across your cluster using\\n`spark_apply`. For example, we can apply `rgamma` over `iris` as\\nfollows:\\n\\n``` r\\nspark_apply(iris_tbl, function(data) {\\n  data[1:4] + rgamma(1,2)\\n})\\n```\\n\\n    ## # Source:   table\\u003csparklyr_tmp_31156f2a4437\\u003e [?? x 4]\\n    ## # Database: spark_connection\\n    ##    Sepal_Length Sepal_Width Petal_Length Petal_Width\\n    ##           \\u003cdbl\\u003e       \\u003cdbl\\u003e        \\u003cdbl\\u003e       \\u003cdbl\\u003e\\n    ##  1         8.30        6.70         4.60        3.40\\n    ##  2         8.10        6.20         4.60        3.40\\n    ##  3         7.90        6.40         4.50        3.40\\n    ##  4         7.80        6.30         4.70        3.40\\n    ##  5         8.20        6.80         4.60        3.40\\n    ##  6         8.60        7.10         4.90        3.60\\n    ##  7         7.80        6.60         4.60        3.50\\n    ##  8         8.20        6.60         4.70        3.40\\n    ##  9         7.60        6.10         4.60        3.40\\n    ## 10         8.10        6.30         4.70        3.30\\n    ## # ... with more rows\\n\\nYou can also group by columns to perform an operation over each group of\\nrows and make use of any package within the closure:\\n\\n``` r\\nspark_apply(\\n  iris_tbl,\\n  function(e) broom::tidy(lm(Petal_Width ~ Petal_Length, e)),\\n  names = c(\\\"term\\\", \\\"estimate\\\", \\\"std.error\\\", \\\"statistic\\\", \\\"p.value\\\"),\\n  group_by = \\\"Species\\\"\\n)\\n```\\n\\n    ## # Source:   table\\u003csparklyr_tmp_31153ed80428\\u003e [?? x 6]\\n    ## # Database: spark_connection\\n    ##   Species    term         estimate std.error statistic         p.value\\n    ##   \\u003cchr\\u003e      \\u003cchr\\u003e           \\u003cdbl\\u003e     \\u003cdbl\\u003e     \\u003cdbl\\u003e           \\u003cdbl\\u003e\\n    ## 1 versicolor (Intercept)   -0.0843    0.161     -0.525 0.602          \\n    ## 2 versicolor Petal_Length   0.331     0.0375     8.83  0.0000000000127\\n    ## 3 virginica  (Intercept)    1.14      0.379      2.99  0.00434        \\n    ## 4 virginica  Petal_Length   0.160     0.0680     2.36  0.0225         \\n    ## 5 setosa     (Intercept)   -0.0482    0.122     -0.396 0.694          \\n    ## 6 setosa     Petal_Length   0.201     0.0826     2.44  0.0186\\n\\n## Extensions\\n\\nThe facilities used internally by sparklyr for its dplyr and machine\\nlearning interfaces are available to extension packages. Since Spark is\\na general purpose cluster computing system there are many potential\\napplications for extensions (e.g. interfaces to custom machine learning\\npipelines, interfaces to 3rd party Spark packages, etc.).\\n\\nHere\u2019s a simple example that wraps a Spark text file line counting\\nfunction with an R function:\\n\\n``` r\\n# write a CSV \\ntempfile \\u003c- tempfile(fileext = \\\".csv\\\")\\nwrite.csv(nycflights13::flights, tempfile, row.names = FALSE, na = \\\"\\\")\\n\\n# define an R interface to Spark line counting\\ncount_lines \\u003c- function(sc, path) {\\n  spark_context(sc) %\\u003e% \\n    invoke(\\\"textFile\\\", path, 1L) %\\u003e% \\n      invoke(\\\"count\\\")\\n}\\n\\n# call spark to count the lines of the CSV\\ncount_lines(sc, tempfile)\\n```\\n\\n    ## [1] 336777\\n\\nTo learn more about creating extensions see the\\n[Extensions](http://spark.rstudio.com/extensions.html) section of the\\nsparklyr website.\\n\\n## Table Utilities\\n\\nYou can cache a table into memory with:\\n\\n``` r\\ntbl_cache(sc, \\\"batting\\\")\\n```\\n\\nand unload from memory using:\\n\\n``` r\\ntbl_uncache(sc, \\\"batting\\\")\\n```\\n\\n## Connection Utilities\\n\\nYou can view the Spark web console using the `spark_web` function:\\n\\n``` r\\nspark_web(sc)\\n```\\n\\nYou can show the log using the `spark_log`\\n    function:\\n\\n``` r\\nspark_log(sc, n = 10)\\n```\\n\\n    ## 18/04/23 10:29:12 INFO HadoopRDD: Input split: file:/var/folders/fz/v6wfsg2x1fb1rw4f6r0x4jwm0000gn/T/RtmppHpKCG/file31151c012844.csv:0+33313106\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_73_piece0 on 127.0.0.1:58732 in memory (size: 11.4 KB, free: 340.3 MB)\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_72_piece0 on 127.0.0.1:58732 in memory (size: 10.6 KB, free: 340.3 MB)\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_71_piece0 on 127.0.0.1:58732 in memory (size: 7.7 KB, free: 340.3 MB)\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_70_piece0 on 127.0.0.1:58732 in memory (size: 9.5 KB, free: 340.3 MB)\\n    ## 18/04/23 10:29:12 INFO Executor: Finished task 0.0 in stage 69.0 (TID 115). 875 bytes result sent to driver\\n    ## 18/04/23 10:29:12 INFO TaskSetManager: Finished task 0.0 in stage 69.0 (TID 115) in 183 ms on localhost (executor driver) (1/1)\\n    ## 18/04/23 10:29:12 INFO TaskSchedulerImpl: Removed TaskSet 69.0, whose tasks have all completed, from pool \\n    ## 18/04/23 10:29:12 INFO DAGScheduler: ResultStage 69 (count at NativeMethodAccessorImpl.java:0) finished in 0.183 s\\n    ## 18/04/23 10:29:12 INFO DAGScheduler: Job 47 finished: count at NativeMethodAccessorImpl.java:0, took 0.188827 s\\n\\nFinally, we disconnect from Spark:\\n\\n``` r\\nspark_disconnect(sc)\\n```\\n\\n## RStudio IDE\\n\\nThe latest RStudio [Preview\\nRelease](https://www.rstudio.com/products/rstudio/download/preview/) of\\nthe RStudio IDE includes integrated support for Spark and the sparklyr\\npackage, including tools for:\\n\\n  - Creating and managing Spark connections\\n  - Browsing the tables and columns of Spark DataFrames\\n  - Previewing the first 1,000 rows of Spark DataFrames\\n\\nOnce you\u2019ve installed the sparklyr package, you should find a new\\n**Spark** pane within the IDE. This pane includes a **New Connection**\\ndialog which can be used to make connections to local or remote Spark\\ninstances:\\n\\n\\u003cimg src=\\\"tools/readme/spark-connect.png\\\" class=\\\"screenshot\\\" width=389 /\\u003e\\n\\nOnce you\u2019ve connected to Spark you\u2019ll be able to browse the tables\\ncontained within the Spark cluster and preview Spark DataFrames using\\nthe standard RStudio data\\nviewer:\\n\\n\\u003cimg src=\\\"tools/readme/spark-dataview.png\\\" class=\\\"screenshot\\\" width=639 /\\u003e\\n\\nYou can also connect to Spark through [Livy](http://livy.io) through a\\nnew connection\\ndialog:\\n\\n\\u003cimg src=\\\"tools/readme/spark-connect-livy.png\\\" class=\\\"screenshot\\\" width=389 /\\u003e\\n\\n\\u003cdiv style=\\\"margin-bottom: 15px;\\\"\\u003e\\n\\n\\u003c/div\\u003e\\n\\nThe RStudio IDE features for sparklyr are available now as part of the\\n[RStudio Preview\\nRelease](https://www.rstudio.com/products/rstudio/download/preview/).\\n\\n## Using H2O\\n\\n[rsparkling](https://cran.r-project.org/package=rsparkling) is a CRAN\\npackage from [H2O](http://h2o.ai) that extends\\n[sparklyr](http://spark.rstudio.com) to provide an interface into\\n[Sparkling Water](https://github.com/h2oai/sparkling-water). For\\ninstance, the following example installs, configures and runs\\n[h2o.glm](http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/glm.html):\\n\\n``` r\\nlibrary(rsparkling)\\nlibrary(sparklyr)\\nlibrary(dplyr)\\nlibrary(h2o)\\n\\nsc \\u003c- spark_connect(master = \\\"local\\\", version = \\\"2.1.0\\\")\\nmtcars_tbl \\u003c- copy_to(sc, mtcars, \\\"mtcars\\\")\\n\\nmtcars_h2o \\u003c- as_h2o_frame(sc, mtcars_tbl, strict_version_check = FALSE)\\n\\nmtcars_glm \\u003c- h2o.glm(x = c(\\\"wt\\\", \\\"cyl\\\"), \\n                      y = \\\"mpg\\\",\\n                      training_frame = mtcars_h2o,\\n                      lambda_search = TRUE)\\n```\\n\\n``` r\\nmtcars_glm\\n```\\n\\n    ## Model Details:\\n    ## ==============\\n    ## \\n    ## H2ORegressionModel: glm\\n    ## Model ID:  GLM_model_R_1524504574477_1 \\n    ## GLM Model: summary\\n    ##     family     link                              regularization\\n    ## 1 gaussian identity Elastic Net (alpha = 0.5, lambda = 0.1013 )\\n    ##                                                                lambda_search\\n    ## 1 nlambda = 100, lambda.max = 10.132, lambda.min = 0.1013, lambda.1se = -1.0\\n    ##   number_of_predictors_total number_of_active_predictors\\n    ## 1                          2                           2\\n    ##   number_of_iterations                                training_frame\\n    ## 1                  100 frame_rdd_31_b77cecc191973299d2e9b6b052ec4257\\n    ## \\n    ## Coefficients: glm coefficients\\n    ##       names coefficients standardized_coefficients\\n    ## 1 Intercept    38.941654                 20.090625\\n    ## 2       cyl    -1.468783                 -2.623132\\n    ## 3        wt    -3.034558                 -2.969186\\n    ## \\n    ## H2ORegressionMetrics: glm\\n    ## ** Reported on training data. **\\n    ## \\n    ## MSE:  6.017684\\n    ## RMSE:  2.453097\\n    ## MAE:  1.940985\\n    ## RMSLE:  0.1114801\\n    ## Mean Residual Deviance :  6.017684\\n    ## R^2 :  0.8289895\\n    ## Null Deviance :1126.047\\n    ## Null D.o.F. :31\\n    ## Residual Deviance :192.5659\\n    ## Residual D.o.F. :29\\n    ## AIC :156.2425\\n\\n``` r\\nspark_disconnect(sc)\\n```\\n\\n## Connecting through Livy\\n\\n[Livy](https://github.com/cloudera/livy) enables remote connections to\\nApache Spark clusters. Connecting to Spark clusters through Livy is\\n**under experimental development** in `sparklyr`. Please post any\\nfeedback or questions as a GitHub issue as needed.\\n\\nBefore connecting to Livy, you will need the connection information to\\nan existing service running Livy. Otherwise, to test `livy` in your\\nlocal environment, you can install it and run it locally as follows:\\n\\n``` r\\nlivy_install()\\n```\\n\\n``` r\\nlivy_service_start()\\n```\\n\\nTo connect, use the Livy service address as `master` and `method =\\n\\\"livy\\\"` in `spark_connect`. Once connection completes, use `sparklyr` as\\nusual, for instance:\\n\\n``` r\\nsc \\u003c- spark_connect(master = \\\"http://localhost:8998\\\", method = \\\"livy\\\")\\ncopy_to(sc, iris)\\n```\\n\\n    ## # Source:   table\\u003ciris\\u003e [?? x 5]\\n    ## # Database: spark_connection\\n    ##    Sepal_Length Sepal_Width Petal_Length Petal_Width Species\\n    ##           \\u003cdbl\\u003e       \\u003cdbl\\u003e        \\u003cdbl\\u003e       \\u003cdbl\\u003e \\u003cchr\\u003e  \\n    ##  1         5.10        3.50         1.40       0.200 setosa \\n    ##  2         4.90        3.00         1.40       0.200 setosa \\n    ##  3         4.70        3.20         1.30       0.200 setosa \\n    ##  4         4.60        3.10         1.50       0.200 setosa \\n    ##  5         5.00        3.60         1.40       0.200 setosa \\n    ##  6         5.40        3.90         1.70       0.400 setosa \\n    ##  7         4.60        3.40         1.40       0.300 setosa \\n    ##  8         5.00        3.40         1.50       0.200 setosa \\n    ##  9         4.40        2.90         1.40       0.200 setosa \\n    ## 10         4.90        3.10         1.50       0.100 setosa \\n    ## # ... with more rows\\n\\n``` r\\nspark_disconnect(sc)\\n```\\n\\nOnce you are done using `livy` locally, you should stop this service\\nwith:\\n\\n``` r\\nlivy_service_stop()\\n```\\n\\nTo connect to remote `livy` clusters that support basic authentication\\nconnect as:\\n\\n``` r\\nconfig \\u003c- livy_config(username=\\\"\\u003cusername\\u003e\\\", password=\\\"\\u003cpassword\\\"\\u003e)\\nsc \\u003c- spark_connect(master = \\\"\\u003caddress\\u003e\\\", method = \\\"livy\\\", config = config)\\nspark_disconnect(sc)\\n```\",\"sourceJSON\":\"{\\\"Package\\\":\\\"sparklyr\\\",\\\"Type\\\":\\\"Package\\\",\\\"Title\\\":\\\"R Interface to Apache Spark\\\",\\\"Version\\\":\\\"0.8.0\\\",\\\"Authors@R\\\":\\\"c(\\\\nperson(\\\\\\\"Javier\\\\\\\", \\\\\\\"Luraschi\\\\\\\", email = \\\\\\\"javier@rstudio.com\\\\\\\", role = c(\\\\\\\"aut\\\\\\\", \\\\\\\"cre\\\\\\\")),\\\\nperson(\\\\\\\"Kevin\\\\\\\", \\\\\\\"Kuo\\\\\\\", role = \\\\\\\"aut\\\\\\\", email = \\\\\\\"kevin.kuo@rstudio.com\\\\\\\",\\\\ncomment = c(ORCID = \\\\\\\"0000-0001-7803-7901\\\\\\\")),\\\\nperson(\\\\\\\"Kevin\\\\\\\", \\\\\\\"Ushey\\\\\\\", role = \\\\\\\"aut\\\\\\\", email = \\\\\\\"kevin@rstudio.com\\\\\\\"),\\\\nperson(\\\\\\\"JJ\\\\\\\", \\\\\\\"Allaire\\\\\\\", role = \\\\\\\"aut\\\\\\\", email = \\\\\\\"jj@rstudio.com\\\\\\\"),\\\\nperson(family = \\\\\\\"RStudio\\\\\\\", role = c(\\\\\\\"cph\\\\\\\")),\\\\nperson(family = \\\\\\\"The Apache Software Foundation\\\\\\\", role = c(\\\\\\\"aut\\\\\\\", \\\\\\\"cph\\\\\\\"))\\\\n)\\\",\\\"Maintainer\\\":\\\"Javier Luraschi \\u003cjavier@rstudio.com\\u003e\\\",\\\"Description\\\":\\\"R interface to Apache Spark, a fast and general engine for big data\\\\nprocessing, see \\u003chttp://spark.apache.org\\u003e. This package supports connecting to\\\\nlocal and remote Apache Spark clusters, provides a 'dplyr' compatible back-end,\\\\nand provides an interface to Spark's built-in machine learning algorithms.\\\",\\\"License\\\":\\\"Apache License 2.0 | file LICENSE\\\",\\\"SystemRequirements\\\":\\\"Spark: 1.6.x or 2.x\\\",\\\"URL\\\":\\\"http://spark.rstudio.com\\\",\\\"BugReports\\\":\\\"https://github.com/rstudio/sparklyr/issues\\\",\\\"LazyData\\\":\\\"TRUE\\\",\\\"RoxygenNote\\\":\\\"6.0.1.9000\\\",\\\"Depends\\\":\\\"\\\\nR (\\u003e= 3.1.2)\\\",\\\"Imports\\\":\\\"\\\\nassertthat,\\\\nbase64enc,\\\\nbroom,\\\\nconfig (\\u003e= 0.2),\\\\nDBI (\\u003e= 0.6-1),\\\\ndplyr (\\u003e= 0.7.2),\\\\ndbplyr (\\u003e= 1.1.0),\\\\ndigest,\\\\nhttr (\\u003e= 1.2.1),\\\\njsonlite (\\u003e= 1.4),\\\\nlazyeval (\\u003e= 0.2.0),\\\\nmethods,\\\\nopenssl (\\u003e= 0.8),\\\\nrappdirs,\\\\nreadr (\\u003e= 1.1.0),\\\\nrlang (\\u003e= 0.1.4),\\\\nrprojroot,\\\\nrstudioapi,\\\\nshiny (\\u003e= 1.0.1),\\\\nwithr,\\\\nxml2,\\\\ntidyr\\\",\\\"Suggests\\\":\\\"\\\\nggplot2,\\\\njaneaustenr,\\\\nnycflights13,\\\\ntestthat,\\\\ntibble,\\\\nRCurl\\\",\\\"repoType\\\":\\\"github\\\",\\\"tarballUrl\\\":\\\"https://api.github.com/repos/sparklyr/sparklyr/tarball/v0.8.0\\\",\\\"jsonAuthors\\\":[{\\\"name\\\":\\\"Javier Luraschi\\\",\\\"email\\\":\\\"javier@rstudio.com\\\",\\\"maintainer\\\":true},{\\\"name\\\":\\\"Kevin Kuo\\\",\\\"email\\\":\\\"kevin.kuo@rstudio.com\\\",\\\"maintainer\\\":false},{\\\"name\\\":\\\"Kevin Ushey\\\",\\\"email\\\":\\\"kevin@rstudio.com\\\",\\\"maintainer\\\":false},{\\\"name\\\":\\\"JJ Allaire\\\",\\\"email\\\":\\\"jj@rstudio.com\\\",\\\"maintainer\\\":false},{\\\"name\\\":\\\" RStudio\\\",\\\"email\\\":null,\\\"maintainer\\\":false},{\\\"name\\\":\\\" The Apache Software Foundation\\\",\\\"email\\\":null,\\\"maintainer\\\":false}],\\\"readme\\\":\\\"sparklyr: R interface for Apache Spark\\\\n================\\\\n\\\\n\\u003cimg src=\\\\\\\"tools/readme/sparklyr-package.png\\\\\\\" width=200 align=\\\\\\\"right\\\\\\\" style=\\\\\\\"margin-left: 20px; margin-right: 20px\\\\\\\"/\\u003e\\\\n\\\\n[![Build\\\\nStatus](https://travis-ci.org/rstudio/sparklyr.svg?branch=master)](https://travis-ci.org/rstudio/sparklyr)\\\\n[![CRAN\\\\\\\\_Status\\\\\\\\_Badge](https://www.r-pkg.org/badges/version/sparklyr)](https://cran.r-project.org/package=sparklyr)\\\\n[![codecov](https://codecov.io/gh/rstudio/sparklyr/branch/master/graph/badge.svg)](https://codecov.io/gh/rstudio/sparklyr)\\\\n[![Join the chat at\\\\nhttps://gitter.im/rstudio/sparklyr](https://badges.gitter.im/rstudio/sparklyr.svg)](https://gitter.im/rstudio/sparklyr?utm_source=badge\\u0026utm_medium=badge\\u0026utm_campaign=pr-badge\\u0026utm_content=badge)\\\\n\\\\n  - Connect to [Spark](http://spark.apache.org/) from R. The sparklyr\\\\n    package provides a complete [dplyr](https://github.com/hadley/dplyr)\\\\n    backend.\\\\n  - Filter and aggregate Spark datasets then bring them into R for\\\\n    analysis and visualization.\\\\n  - Use Spark\u2019s distributed [machine\\\\n    learning](http://spark.apache.org/docs/latest/mllib-guide.html)\\\\n    library from R.\\\\n  - Create [extensions](http://spark.rstudio.com/extensions.html) that\\\\n    call the full Spark API and provide interfaces to Spark packages.\\\\n\\\\n## Installation\\\\n\\\\nYou can install the **sparklyr** package from CRAN as follows:\\\\n\\\\n``` r\\\\ninstall.packages(\\\\\\\"sparklyr\\\\\\\")\\\\n```\\\\n\\\\nYou should also install a local version of Spark for development\\\\npurposes:\\\\n\\\\n``` r\\\\nlibrary(sparklyr)\\\\nspark_install(version = \\\\\\\"2.1.0\\\\\\\")\\\\n```\\\\n\\\\nTo upgrade to the latest version of sparklyr, run the following command\\\\nand restart your r session:\\\\n\\\\n``` r\\\\ndevtools::install_github(\\\\\\\"rstudio/sparklyr\\\\\\\")\\\\n```\\\\n\\\\nIf you use the RStudio IDE, you should also download the latest [preview\\\\nrelease](https://www.rstudio.com/products/rstudio/download/preview/) of\\\\nthe IDE which includes several enhancements for interacting with Spark\\\\n(see the [RStudio IDE](#rstudio-ide) section below for more details).\\\\n\\\\n## Connecting to Spark\\\\n\\\\nYou can connect to both local instances of Spark as well as remote Spark\\\\nclusters. Here we\u2019ll connect to a local instance of Spark via the\\\\n[spark\\\\\\\\_connect](http://spark.rstudio.com/reference/sparklyr/latest/spark_connect.html)\\\\nfunction:\\\\n\\\\n``` r\\\\nlibrary(sparklyr)\\\\nsc \\u003c- spark_connect(master = \\\\\\\"local\\\\\\\")\\\\n```\\\\n\\\\nThe returned Spark connection (`sc`) provides a remote dplyr data source\\\\nto the Spark cluster.\\\\n\\\\nFor more information on connecting to remote Spark clusters see the\\\\n[Deployment](http://spark.rstudio.com/deployment.html) section of the\\\\nsparklyr website.\\\\n\\\\n## Using dplyr\\\\n\\\\nWe can now use all of the available dplyr verbs against the tables\\\\nwithin the cluster.\\\\n\\\\nWe\u2019ll start by copying some datasets from R into the Spark cluster (note\\\\nthat you may need to install the nycflights13 and Lahman packages in\\\\norder to execute this code):\\\\n\\\\n``` r\\\\ninstall.packages(c(\\\\\\\"nycflights13\\\\\\\", \\\\\\\"Lahman\\\\\\\"))\\\\n```\\\\n\\\\n``` r\\\\nlibrary(dplyr)\\\\niris_tbl \\u003c- copy_to(sc, iris)\\\\nflights_tbl \\u003c- copy_to(sc, nycflights13::flights, \\\\\\\"flights\\\\\\\")\\\\nbatting_tbl \\u003c- copy_to(sc, Lahman::Batting, \\\\\\\"batting\\\\\\\")\\\\nsrc_tbls(sc)\\\\n```\\\\n\\\\n    ## [1] \\\\\\\"batting\\\\\\\" \\\\\\\"flights\\\\\\\" \\\\\\\"iris\\\\\\\"\\\\n\\\\nTo start with here\u2019s a simple filtering example:\\\\n\\\\n``` r\\\\n# filter by departure delay and print the first few records\\\\nflights_tbl %\\u003e% filter(dep_delay == 2)\\\\n```\\\\n\\\\n    ## # Source:   lazy query [?? x 19]\\\\n    ## # Database: spark_connection\\\\n    ##     year month   day dep_time sched_dep_time dep_delay arr_time\\\\n    ##    \\u003cint\\u003e \\u003cint\\u003e \\u003cint\\u003e    \\u003cint\\u003e          \\u003cint\\u003e     \\u003cdbl\\u003e    \\u003cint\\u003e\\\\n    ##  1  2013     1     1      517            515      2.00      830\\\\n    ##  2  2013     1     1      542            540      2.00      923\\\\n    ##  3  2013     1     1      702            700      2.00     1058\\\\n    ##  4  2013     1     1      715            713      2.00      911\\\\n    ##  5  2013     1     1      752            750      2.00     1025\\\\n    ##  6  2013     1     1      917            915      2.00     1206\\\\n    ##  7  2013     1     1      932            930      2.00     1219\\\\n    ##  8  2013     1     1     1028           1026      2.00     1350\\\\n    ##  9  2013     1     1     1042           1040      2.00     1325\\\\n    ## 10  2013     1     1     1231           1229      2.00     1523\\\\n    ## # ... with more rows, and 12 more variables: sched_arr_time \\u003cint\\u003e,\\\\n    ## #   arr_delay \\u003cdbl\\u003e, carrier \\u003cchr\\u003e, flight \\u003cint\\u003e, tailnum \\u003cchr\\u003e,\\\\n    ## #   origin \\u003cchr\\u003e, dest \\u003cchr\\u003e, air_time \\u003cdbl\\u003e, distance \\u003cdbl\\u003e, hour \\u003cdbl\\u003e,\\\\n    ## #   minute \\u003cdbl\\u003e, time_hour \\u003cdttm\\u003e\\\\n\\\\n[Introduction to dplyr](https://CRAN.R-project.org/package=dplyr)\\\\nprovides additional dplyr examples you can try. For example, consider\\\\nthe last example from the tutorial which plots data on flight delays:\\\\n\\\\n``` r\\\\ndelay \\u003c- flights_tbl %\\u003e% \\\\n  group_by(tailnum) %\\u003e%\\\\n  summarise(count = n(), dist = mean(distance), delay = mean(arr_delay)) %\\u003e%\\\\n  filter(count \\u003e 20, dist \\u003c 2000, !is.na(delay)) %\\u003e%\\\\n  collect\\\\n\\\\n# plot delays\\\\nlibrary(ggplot2)\\\\nggplot(delay, aes(dist, delay)) +\\\\n  geom_point(aes(size = count), alpha = 1/2) +\\\\n  geom_smooth() +\\\\n  scale_size_area(max_size = 2)\\\\n```\\\\n\\\\n    ## `geom_smooth()` using method = 'gam'\\\\n\\\\n![](tools/readme/ggplot2-1.png)\\u003c!-- --\\u003e\\\\n\\\\n### Window Functions\\\\n\\\\ndplyr [window functions](https://CRAN.R-project.org/package=dplyr) are\\\\nalso supported, for example:\\\\n\\\\n``` r\\\\nbatting_tbl %\\u003e%\\\\n  select(playerID, yearID, teamID, G, AB:H) %\\u003e%\\\\n  arrange(playerID, yearID, teamID) %\\u003e%\\\\n  group_by(playerID) %\\u003e%\\\\n  filter(min_rank(desc(H)) \\u003c= 2 \\u0026 H \\u003e 0)\\\\n```\\\\n\\\\n    ## # Source:     lazy query [?? x 7]\\\\n    ## # Database:   spark_connection\\\\n    ## # Groups:     playerID\\\\n    ## # Ordered by: playerID, yearID, teamID\\\\n    ##    playerID  yearID teamID     G    AB     R     H\\\\n    ##    \\u003cchr\\u003e      \\u003cint\\u003e \\u003cchr\\u003e  \\u003cint\\u003e \\u003cint\\u003e \\u003cint\\u003e \\u003cint\\u003e\\\\n    ##  1 aaronha01   1959 ML1      154   629   116   223\\\\n    ##  2 aaronha01   1963 ML1      161   631   121   201\\\\n    ##  3 abbotji01   1999 MIL       20    21     0     2\\\\n    ##  4 abnersh01   1992 CHA       97   208    21    58\\\\n    ##  5 abnersh01   1990 SDN       91   184    17    45\\\\n    ##  6 acklefr01   1963 CHA        2     5     0     1\\\\n    ##  7 acklefr01   1964 CHA        3     1     0     1\\\\n    ##  8 adamecr01   2016 COL      121   225    25    49\\\\n    ##  9 adamecr01   2015 COL       26    53     4    13\\\\n    ## 10 adamsac01   1943 NY1       70    32     3     4\\\\n    ## # ... with more rows\\\\n\\\\nFor additional documentation on using dplyr with Spark see the\\\\n[dplyr](http://spark.rstudio.com/dplyr.html) section of the sparklyr\\\\nwebsite.\\\\n\\\\n## Using SQL\\\\n\\\\nIt\u2019s also possible to execute SQL queries directly against tables within\\\\na Spark cluster. The `spark_connection` object implements a\\\\n[DBI](https://github.com/rstats-db/DBI) interface for Spark, so you can\\\\nuse `dbGetQuery` to execute SQL and return the result as an R data\\\\nframe:\\\\n\\\\n``` r\\\\nlibrary(DBI)\\\\niris_preview \\u003c- dbGetQuery(sc, \\\\\\\"SELECT * FROM iris LIMIT 10\\\\\\\")\\\\niris_preview\\\\n```\\\\n\\\\n    ##    Sepal_Length Sepal_Width Petal_Length Petal_Width Species\\\\n    ## 1           5.1         3.5          1.4         0.2  setosa\\\\n    ## 2           4.9         3.0          1.4         0.2  setosa\\\\n    ## 3           4.7         3.2          1.3         0.2  setosa\\\\n    ## 4           4.6         3.1          1.5         0.2  setosa\\\\n    ## 5           5.0         3.6          1.4         0.2  setosa\\\\n    ## 6           5.4         3.9          1.7         0.4  setosa\\\\n    ## 7           4.6         3.4          1.4         0.3  setosa\\\\n    ## 8           5.0         3.4          1.5         0.2  setosa\\\\n    ## 9           4.4         2.9          1.4         0.2  setosa\\\\n    ## 10          4.9         3.1          1.5         0.1  setosa\\\\n\\\\n## Machine Learning\\\\n\\\\nYou can orchestrate machine learning algorithms in a Spark cluster via\\\\nthe [machine\\\\nlearning](http://spark.apache.org/docs/latest/mllib-guide.html)\\\\nfunctions within **sparklyr**. These functions connect to a set of\\\\nhigh-level APIs built on top of DataFrames that help you create and tune\\\\nmachine learning workflows.\\\\n\\\\nHere\u2019s an example where we use\\\\n[ml\\\\\\\\_linear\\\\\\\\_regression](http://spark.rstudio.com/reference/sparklyr/latest/ml_linear_regression.html)\\\\nto fit a linear regression model. We\u2019ll use the built-in `mtcars`\\\\ndataset, and see if we can predict a car\u2019s fuel consumption (`mpg`)\\\\nbased on its weight (`wt`), and the number of cylinders the engine\\\\ncontains (`cyl`). We\u2019ll assume in each case that the relationship\\\\nbetween `mpg` and each of our features is linear.\\\\n\\\\n``` r\\\\n# copy mtcars into spark\\\\nmtcars_tbl \\u003c- copy_to(sc, mtcars)\\\\n\\\\n# transform our data set, and then partition into 'training', 'test'\\\\npartitions \\u003c- mtcars_tbl %\\u003e%\\\\n  filter(hp \\u003e= 100) %\\u003e%\\\\n  mutate(cyl8 = cyl == 8) %\\u003e%\\\\n  sdf_partition(training = 0.5, test = 0.5, seed = 1099)\\\\n\\\\n# fit a linear model to the training dataset\\\\nfit \\u003c- partitions$training %\\u003e%\\\\n  ml_linear_regression(response = \\\\\\\"mpg\\\\\\\", features = c(\\\\\\\"wt\\\\\\\", \\\\\\\"cyl\\\\\\\"))\\\\nfit\\\\n```\\\\n\\\\n    ## Formula: mpg ~ wt + cyl\\\\n    ## \\\\n    ## Coefficients:\\\\n    ## (Intercept)          wt         cyl \\\\n    ##   33.499452   -2.818463   -0.923187\\\\n\\\\nFor linear regression models produced by Spark, we can use `summary()`\\\\nto learn a bit more about the quality of our fit, and the statistical\\\\nsignificance of each of our predictors.\\\\n\\\\n``` r\\\\nsummary(fit)\\\\n```\\\\n\\\\n    ## Deviance Residuals:\\\\n    ##    Min     1Q Median     3Q    Max \\\\n    ## -1.752 -1.134 -0.499  1.296  2.282 \\\\n    ## \\\\n    ## Coefficients:\\\\n    ## (Intercept)          wt         cyl \\\\n    ##   33.499452   -2.818463   -0.923187 \\\\n    ## \\\\n    ## R-Squared: 0.8274\\\\n    ## Root Mean Squared Error: 1.422\\\\n\\\\nSpark machine learning supports a wide array of algorithms and feature\\\\ntransformations and as illustrated above it\u2019s easy to chain these\\\\nfunctions together with dplyr pipelines. To learn more see the [machine\\\\nlearning](mllib.html) section.\\\\n\\\\n## Reading and Writing Data\\\\n\\\\nYou can read and write data in CSV, JSON, and Parquet formats. Data can\\\\nbe stored in HDFS, S3, or on the local filesystem of cluster nodes.\\\\n\\\\n``` r\\\\ntemp_csv \\u003c- tempfile(fileext = \\\\\\\".csv\\\\\\\")\\\\ntemp_parquet \\u003c- tempfile(fileext = \\\\\\\".parquet\\\\\\\")\\\\ntemp_json \\u003c- tempfile(fileext = \\\\\\\".json\\\\\\\")\\\\n\\\\nspark_write_csv(iris_tbl, temp_csv)\\\\niris_csv_tbl \\u003c- spark_read_csv(sc, \\\\\\\"iris_csv\\\\\\\", temp_csv)\\\\n\\\\nspark_write_parquet(iris_tbl, temp_parquet)\\\\niris_parquet_tbl \\u003c- spark_read_parquet(sc, \\\\\\\"iris_parquet\\\\\\\", temp_parquet)\\\\n\\\\nspark_write_json(iris_tbl, temp_json)\\\\niris_json_tbl \\u003c- spark_read_json(sc, \\\\\\\"iris_json\\\\\\\", temp_json)\\\\n\\\\nsrc_tbls(sc)\\\\n```\\\\n\\\\n    ## [1] \\\\\\\"batting\\\\\\\"      \\\\\\\"flights\\\\\\\"      \\\\\\\"iris\\\\\\\"         \\\\\\\"iris_csv\\\\\\\"    \\\\n    ## [5] \\\\\\\"iris_json\\\\\\\"    \\\\\\\"iris_parquet\\\\\\\" \\\\\\\"mtcars\\\\\\\"\\\\n\\\\n## Distributed R\\\\n\\\\nYou can execute arbitrary r code across your cluster using\\\\n`spark_apply`. For example, we can apply `rgamma` over `iris` as\\\\nfollows:\\\\n\\\\n``` r\\\\nspark_apply(iris_tbl, function(data) {\\\\n  data[1:4] + rgamma(1,2)\\\\n})\\\\n```\\\\n\\\\n    ## # Source:   table\\u003csparklyr_tmp_31156f2a4437\\u003e [?? x 4]\\\\n    ## # Database: spark_connection\\\\n    ##    Sepal_Length Sepal_Width Petal_Length Petal_Width\\\\n    ##           \\u003cdbl\\u003e       \\u003cdbl\\u003e        \\u003cdbl\\u003e       \\u003cdbl\\u003e\\\\n    ##  1         8.30        6.70         4.60        3.40\\\\n    ##  2         8.10        6.20         4.60        3.40\\\\n    ##  3         7.90        6.40         4.50        3.40\\\\n    ##  4         7.80        6.30         4.70        3.40\\\\n    ##  5         8.20        6.80         4.60        3.40\\\\n    ##  6         8.60        7.10         4.90        3.60\\\\n    ##  7         7.80        6.60         4.60        3.50\\\\n    ##  8         8.20        6.60         4.70        3.40\\\\n    ##  9         7.60        6.10         4.60        3.40\\\\n    ## 10         8.10        6.30         4.70        3.30\\\\n    ## # ... with more rows\\\\n\\\\nYou can also group by columns to perform an operation over each group of\\\\nrows and make use of any package within the closure:\\\\n\\\\n``` r\\\\nspark_apply(\\\\n  iris_tbl,\\\\n  function(e) broom::tidy(lm(Petal_Width ~ Petal_Length, e)),\\\\n  names = c(\\\\\\\"term\\\\\\\", \\\\\\\"estimate\\\\\\\", \\\\\\\"std.error\\\\\\\", \\\\\\\"statistic\\\\\\\", \\\\\\\"p.value\\\\\\\"),\\\\n  group_by = \\\\\\\"Species\\\\\\\"\\\\n)\\\\n```\\\\n\\\\n    ## # Source:   table\\u003csparklyr_tmp_31153ed80428\\u003e [?? x 6]\\\\n    ## # Database: spark_connection\\\\n    ##   Species    term         estimate std.error statistic         p.value\\\\n    ##   \\u003cchr\\u003e      \\u003cchr\\u003e           \\u003cdbl\\u003e     \\u003cdbl\\u003e     \\u003cdbl\\u003e           \\u003cdbl\\u003e\\\\n    ## 1 versicolor (Intercept)   -0.0843    0.161     -0.525 0.602          \\\\n    ## 2 versicolor Petal_Length   0.331     0.0375     8.83  0.0000000000127\\\\n    ## 3 virginica  (Intercept)    1.14      0.379      2.99  0.00434        \\\\n    ## 4 virginica  Petal_Length   0.160     0.0680     2.36  0.0225         \\\\n    ## 5 setosa     (Intercept)   -0.0482    0.122     -0.396 0.694          \\\\n    ## 6 setosa     Petal_Length   0.201     0.0826     2.44  0.0186\\\\n\\\\n## Extensions\\\\n\\\\nThe facilities used internally by sparklyr for its dplyr and machine\\\\nlearning interfaces are available to extension packages. Since Spark is\\\\na general purpose cluster computing system there are many potential\\\\napplications for extensions (e.g. interfaces to custom machine learning\\\\npipelines, interfaces to 3rd party Spark packages, etc.).\\\\n\\\\nHere\u2019s a simple example that wraps a Spark text file line counting\\\\nfunction with an R function:\\\\n\\\\n``` r\\\\n# write a CSV \\\\ntempfile \\u003c- tempfile(fileext = \\\\\\\".csv\\\\\\\")\\\\nwrite.csv(nycflights13::flights, tempfile, row.names = FALSE, na = \\\\\\\"\\\\\\\")\\\\n\\\\n# define an R interface to Spark line counting\\\\ncount_lines \\u003c- function(sc, path) {\\\\n  spark_context(sc) %\\u003e% \\\\n    invoke(\\\\\\\"textFile\\\\\\\", path, 1L) %\\u003e% \\\\n      invoke(\\\\\\\"count\\\\\\\")\\\\n}\\\\n\\\\n# call spark to count the lines of the CSV\\\\ncount_lines(sc, tempfile)\\\\n```\\\\n\\\\n    ## [1] 336777\\\\n\\\\nTo learn more about creating extensions see the\\\\n[Extensions](http://spark.rstudio.com/extensions.html) section of the\\\\nsparklyr website.\\\\n\\\\n## Table Utilities\\\\n\\\\nYou can cache a table into memory with:\\\\n\\\\n``` r\\\\ntbl_cache(sc, \\\\\\\"batting\\\\\\\")\\\\n```\\\\n\\\\nand unload from memory using:\\\\n\\\\n``` r\\\\ntbl_uncache(sc, \\\\\\\"batting\\\\\\\")\\\\n```\\\\n\\\\n## Connection Utilities\\\\n\\\\nYou can view the Spark web console using the `spark_web` function:\\\\n\\\\n``` r\\\\nspark_web(sc)\\\\n```\\\\n\\\\nYou can show the log using the `spark_log`\\\\n    function:\\\\n\\\\n``` r\\\\nspark_log(sc, n = 10)\\\\n```\\\\n\\\\n    ## 18/04/23 10:29:12 INFO HadoopRDD: Input split: file:/var/folders/fz/v6wfsg2x1fb1rw4f6r0x4jwm0000gn/T/RtmppHpKCG/file31151c012844.csv:0+33313106\\\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_73_piece0 on 127.0.0.1:58732 in memory (size: 11.4 KB, free: 340.3 MB)\\\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_72_piece0 on 127.0.0.1:58732 in memory (size: 10.6 KB, free: 340.3 MB)\\\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_71_piece0 on 127.0.0.1:58732 in memory (size: 7.7 KB, free: 340.3 MB)\\\\n    ## 18/04/23 10:29:12 INFO BlockManagerInfo: Removed broadcast_70_piece0 on 127.0.0.1:58732 in memory (size: 9.5 KB, free: 340.3 MB)\\\\n    ## 18/04/23 10:29:12 INFO Executor: Finished task 0.0 in stage 69.0 (TID 115). 875 bytes result sent to driver\\\\n    ## 18/04/23 10:29:12 INFO TaskSetManager: Finished task 0.0 in stage 69.0 (TID 115) in 183 ms on localhost (executor driver) (1/1)\\\\n    ## 18/04/23 10:29:12 INFO TaskSchedulerImpl: Removed TaskSet 69.0, whose tasks have all completed, from pool \\\\n    ## 18/04/23 10:29:12 INFO DAGScheduler: ResultStage 69 (count at NativeMethodAccessorImpl.java:0) finished in 0.183 s\\\\n    ## 18/04/23 10:29:12 INFO DAGScheduler: Job 47 finished: count at NativeMethodAccessorImpl.java:0, took 0.188827 s\\\\n\\\\nFinally, we disconnect from Spark:\\\\n\\\\n``` r\\\\nspark_disconnect(sc)\\\\n```\\\\n\\\\n## RStudio IDE\\\\n\\\\nThe latest RStudio [Preview\\\\nRelease](https://www.rstudio.com/products/rstudio/download/preview/) of\\\\nthe RStudio IDE includes integrated support for Spark and the sparklyr\\\\npackage, including tools for:\\\\n\\\\n  - Creating and managing Spark connections\\\\n  - Browsing the tables and columns of Spark DataFrames\\\\n  - Previewing the first 1,000 rows of Spark DataFrames\\\\n\\\\nOnce you\u2019ve installed the sparklyr package, you should find a new\\\\n**Spark** pane within the IDE. This pane includes a **New Connection**\\\\ndialog which can be used to make connections to local or remote Spark\\\\ninstances:\\\\n\\\\n\\u003cimg src=\\\\\\\"tools/readme/spark-connect.png\\\\\\\" class=\\\\\\\"screenshot\\\\\\\" width=389 /\\u003e\\\\n\\\\nOnce you\u2019ve connected to Spark you\u2019ll be able to browse the tables\\\\ncontained within the Spark cluster and preview Spark DataFrames using\\\\nthe standard RStudio data\\\\nviewer:\\\\n\\\\n\\u003cimg src=\\\\\\\"tools/readme/spark-dataview.png\\\\\\\" class=\\\\\\\"screenshot\\\\\\\" width=639 /\\u003e\\\\n\\\\nYou can also connect to Spark through [Livy](http://livy.io) through a\\\\nnew connection\\\\ndialog:\\\\n\\\\n\\u003cimg src=\\\\\\\"tools/readme/spark-connect-livy.png\\\\\\\" class=\\\\\\\"screenshot\\\\\\\" width=389 /\\u003e\\\\n\\\\n\\u003cdiv style=\\\\\\\"margin-bottom: 15px;\\\\\\\"\\u003e\\\\n\\\\n\\u003c/div\\u003e\\\\n\\\\nThe RStudio IDE features for sparklyr are available now as part of the\\\\n[RStudio Preview\\\\nRelease](https://www.rstudio.com/products/rstudio/download/preview/).\\\\n\\\\n## Using H2O\\\\n\\\\n[rsparkling](https://cran.r-project.org/package=rsparkling) is a CRAN\\\\npackage from [H2O](http://h2o.ai) that extends\\\\n[sparklyr](http://spark.rstudio.com) to provide an interface into\\\\n[Sparkling Water](https://github.com/h2oai/sparkling-water). For\\\\ninstance, the following example installs, configures and runs\\\\n[h2o.glm](http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/glm.html):\\\\n\\\\n``` r\\\\nlibrary(rsparkling)\\\\nlibrary(sparklyr)\\\\nlibrary(dplyr)\\\\nlibrary(h2o)\\\\n\\\\nsc \\u003c- spark_connect(master = \\\\\\\"local\\\\\\\", version = \\\\\\\"2.1.0\\\\\\\")\\\\nmtcars_tbl \\u003c- copy_to(sc, mtcars, \\\\\\\"mtcars\\\\\\\")\\\\n\\\\nmtcars_h2o \\u003c- as_h2o_frame(sc, mtcars_tbl, strict_version_check = FALSE)\\\\n\\\\nmtcars_glm \\u003c- h2o.glm(x = c(\\\\\\\"wt\\\\\\\", \\\\\\\"cyl\\\\\\\"), \\\\n                      y = \\\\\\\"mpg\\\\\\\",\\\\n                      training_frame = mtcars_h2o,\\\\n                      lambda_search = TRUE)\\\\n```\\\\n\\\\n``` r\\\\nmtcars_glm\\\\n```\\\\n\\\\n    ## Model Details:\\\\n    ## ==============\\\\n    ## \\\\n    ## H2ORegressionModel: glm\\\\n    ## Model ID:  GLM_model_R_1524504574477_1 \\\\n    ## GLM Model: summary\\\\n    ##     family     link                              regularization\\\\n    ## 1 gaussian identity Elastic Net (alpha = 0.5, lambda = 0.1013 )\\\\n    ##                                                                lambda_search\\\\n    ## 1 nlambda = 100, lambda.max = 10.132, lambda.min = 0.1013, lambda.1se = -1.0\\\\n    ##   number_of_predictors_total number_of_active_predictors\\\\n    ## 1                          2                           2\\\\n    ##   number_of_iterations                                training_frame\\\\n    ## 1                  100 frame_rdd_31_b77cecc191973299d2e9b6b052ec4257\\\\n    ## \\\\n    ## Coefficients: glm coefficients\\\\n    ##       names coefficients standardized_coefficients\\\\n    ## 1 Intercept    38.941654                 20.090625\\\\n    ## 2       cyl    -1.468783                 -2.623132\\\\n    ## 3        wt    -3.034558                 -2.969186\\\\n    ## \\\\n    ## H2ORegressionMetrics: glm\\\\n    ## ** Reported on training data. **\\\\n    ## \\\\n    ## MSE:  6.017684\\\\n    ## RMSE:  2.453097\\\\n    ## MAE:  1.940985\\\\n    ## RMSLE:  0.1114801\\\\n    ## Mean Residual Deviance :  6.017684\\\\n    ## R^2 :  0.8289895\\\\n    ## Null Deviance :1126.047\\\\n    ## Null D.o.F. :31\\\\n    ## Residual Deviance :192.5659\\\\n    ## Residual D.o.F. :29\\\\n    ## AIC :156.2425\\\\n\\\\n``` r\\\\nspark_disconnect(sc)\\\\n```\\\\n\\\\n## Connecting through Livy\\\\n\\\\n[Livy](https://github.com/cloudera/livy) enables remote connections to\\\\nApache Spark clusters. Connecting to Spark clusters through Livy is\\\\n**under experimental development** in `sparklyr`. Please post any\\\\nfeedback or questions as a GitHub issue as needed.\\\\n\\\\nBefore connecting to Livy, you will need the connection information to\\\\nan existing service running Livy. Otherwise, to test `livy` in your\\\\nlocal environment, you can install it and run it locally as follows:\\\\n\\\\n``` r\\\\nlivy_install()\\\\n```\\\\n\\\\n``` r\\\\nlivy_service_start()\\\\n```\\\\n\\\\nTo connect, use the Livy service address as `master` and `method =\\\\n\\\\\\\"livy\\\\\\\"` in `spark_connect`. Once connection completes, use `sparklyr` as\\\\nusual, for instance:\\\\n\\\\n``` r\\\\nsc \\u003c- spark_connect(master = \\\\\\\"http://localhost:8998\\\\\\\", method = \\\\\\\"livy\\\\\\\")\\\\ncopy_to(sc, iris)\\\\n```\\\\n\\\\n    ## # Source:   table\\u003ciris\\u003e [?? x 5]\\\\n    ## # Database: spark_connection\\\\n    ##    Sepal_Length Sepal_Width Petal_Length Petal_Width Species\\\\n    ##           \\u003cdbl\\u003e       \\u003cdbl\\u003e        \\u003cdbl\\u003e       \\u003cdbl\\u003e \\u003cchr\\u003e  \\\\n    ##  1         5.10        3.50         1.40       0.200 setosa \\\\n    ##  2         4.90        3.00         1.40       0.200 setosa \\\\n    ##  3         4.70        3.20         1.30       0.200 setosa \\\\n    ##  4         4.60        3.10         1.50       0.200 setosa \\\\n    ##  5         5.00        3.60         1.40       0.200 setosa \\\\n    ##  6         5.40        3.90         1.70       0.400 setosa \\\\n    ##  7         4.60        3.40         1.40       0.300 setosa \\\\n    ##  8         5.00        3.40         1.50       0.200 setosa \\\\n    ##  9         4.40        2.90         1.40       0.200 setosa \\\\n    ## 10         4.90        3.10         1.50       0.100 setosa \\\\n    ## # ... with more rows\\\\n\\\\n``` r\\\\nspark_disconnect(sc)\\\\n```\\\\n\\\\nOnce you are done using `livy` locally, you should stop this service\\\\nwith:\\\\n\\\\n``` r\\\\nlivy_service_stop()\\\\n```\\\\n\\\\nTo connect to remote `livy` clusters that support basic authentication\\\\nconnect as:\\\\n\\\\n``` r\\\\nconfig \\u003c- livy_config(username=\\\\\\\"\\u003cusername\\u003e\\\\\\\", password=\\\\\\\"\\u003cpassword\\\\\\\"\\u003e)\\\\nsc \\u003c- spark_connect(master = \\\\\\\"\\u003caddress\\u003e\\\\\\\", method = \\\\\\\"livy\\\\\\\", config = config)\\\\nspark_disconnect(sc)\\\\n```\\\",\\\"jobInfo\\\":{\\\"package\\\":\\\"sparklyr\\\",\\\"version\\\":\\\"v0.8.0\\\",\\\"parsingStatus\\\":\\\"success\\\",\\\"parserVersion\\\":1,\\\"parsedAt\\\":\\\"2020-05-04T13:32:51+0000\\\"}}\",\"created_at\":\"2018-04-30T17:33:06.000Z\",\"updated_at\":\"2024-03-25T23:30:34.000Z\",\"maintainer_id\":529454,\"package\":{\"api_uri\":\"/api/packages/sparklyr\",\"uri\":\"/packages/sparklyr\",\"name\":\"sparklyr\",\"latest_version_id\":556071,\"type_id\":1},\"maintainer\":{\"api_uri\":\"/api/collaborators/529454\",\"uri\":\"/collaborators/name/Javier%20Luraschi\",\"gravatar_url\":\"https://www.gravatar.com/avatar/7b65e0423508381ce0ec1e69c01a76f0\",\"id\":529454,\"name\":\"Javier Luraschi\",\"email\":\"javier@rstudio.com\",\"created_at\":\"2016-07-12T10:46:01.000Z\",\"updated_at\":\"2016-07-12T10:46:01.000Z\"}},\"arguments\":[{\"name\":\"x\",\"description\":\"\\u003cp\\u003eA \\u003ccode\\u003espark_connection\\u003c/code\\u003e, \\u003ccode\\u003eml_pipeline\\u003c/code\\u003e, or a \\u003ccode\\u003etbl_spark\\u003c/code\\u003e.\\u003c/p\\u003e\",\"topic_id\":7909907},{\"name\":\"input_col\",\"description\":\"\\u003cp\\u003eThe name of the input column.\\u003c/p\\u003e\",\"topic_id\":7909907},{\"name\":\"output_col\",\"description\":\"\\u003cp\\u003eThe name of the output column.\\u003c/p\\u003e\",\"topic_id\":7909907},{\"name\":\"drop_last\",\"description\":\"\\u003cp\\u003eWhether to drop the last category. Defaults to \\u003ccode\\u003eTRUE\\u003c/code\\u003e.\\u003c/p\\u003e\",\"topic_id\":7909907},{\"name\":\"uid\",\"description\":\"\\u003cp\\u003eA character string used to uniquely identify the feature transformer.\\u003c/p\\u003e\",\"topic_id\":7909907},{\"name\":\"...\",\"description\":\"\\u003cp\\u003eOptional arguments; currently unused.\\u003c/p\\u003e\",\"topic_id\":7909907}],\"sections\":[],\"aliases\":[{\"name\":\"ft_one_hot_encoder\",\"topic_id\":7909907}],\"pageTitle\":\"ft_one_hot_encoder function\",\"type\":\"topic\",\"canonicalLink\":\"/packages/sparklyr/versions/1.8.5/topics/ft_one_hot_encoder\",\"dcl\":false}},\"__N_SSP\":true},\"page\":\"/packages/[package]/versions/[version]/topics/[topic]\",\"query\":{\"package\":\"sparklyr\",\"version\":\"0.8.0\",\"topic\":\"ft_one_hot_encoder\"},\"buildId\":\"md9MtDKNhtTyIK5AaW0ev\",\"isFallback\":false,\"isExperimentalCompile\":false,\"gssp\":true,\"scriptLoader\":[]}</script></body></html>\n"}
